/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui_db;

import com.toedter.calendar.JDateChooser;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Component;
import java.awt.Container;
import java.awt.event.ActionEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author user
 */
public class EmployeeForm extends javax.swing.JFrame {
   private static EmployeeForm insertEmployee = new EmployeeForm();
   private static EmployeeForm updateEmployee = new EmployeeForm();
   private static boolean updateFlag = false;
   private static String updateID;
    /**
     * Creates new form EmployeeForm
     */
    public EmployeeForm() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void setupdateFlag(boolean value)
    {
        updateEmployee.updateFlag = value;
    }
    public void openFrame() {
        //empF.showDataRecord();
        insertEmployee.jLabel12.setVisible(false);
        insertEmployee.ldate.setVisible(false);
        insertEmployee.resetLdateBtn.setVisible(false);
        insertEmployee.setVisible(true);

     }
    public void openUpdateFrame(String id,String person,String gen,String fname,String lname,String position,String rank
                                ,String address,String phone,String startdate,String  chg) throws ParseException
    {
        updateEmployee.jLabel1.setText("แก้ไขข้อมูลพนักงาน");
        updateEmployee.updateID = id;
        updateEmployee.empnationID.setText(person);
        updateEmployee.empnationID.setText(person.replace("-", ""));
        
        String text = fname;
        Boolean found;
        found = text.contains("นางสาว");
        if(gen.equals("M"))
        {
          updateEmployee.prefixx.setSelectedItem("นาย");  
          updateEmployee.fname.setText(fname.replace("นาย", ""));
        }
        else if(found)
        {
          updateEmployee.prefixx.setSelectedItem("นางสาว");  
          updateEmployee.fname.setText(fname.replace("นางสาว", ""));
        }
        else
        {
          updateEmployee.prefixx.setSelectedItem("นาง");  
          updateEmployee.fname.setText(fname.replace("นาง", ""));
        } 
        JTextFieldDateEditor editor = (JTextFieldDateEditor) updateEmployee.fdate.getDateEditor();
        editor.setEditable(false);
        
        JTextFieldDateEditor editor1 = (JTextFieldDateEditor) updateEmployee.ldate.getDateEditor();
        editor1.setEditable(false);
        updateEmployee.ldate.setCalendar(null);
        updateEmployee.lname.setText(lname);
        updateEmployee.position.setSelectedItem(position);
        updateEmployee.degree.setText(rank);
        updateEmployee.address.setText(address);
        updateEmployee.telephone.setText(phone);
        updateEmployee.telephone.setText(phone.replace("-", ""));
        DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Date date = format.parse(startdate);
        updateEmployee.fdate.setDate(date);
      
        updateEmployee.cost.setText(chg);
        updateEmployee.setVisible(true);
    }
    
    public void insert(){
       boolean flag = true;
       String str1="";
       String str2="";
       //boolean cos="";
          
        JTextFieldDateEditor editor = (JTextFieldDateEditor) insertEmployee.fdate.getDateEditor();
        editor.setEditable(false);    
        Date date = fdate.getDate();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd"); // ต้องมีรูปแบบ
        String FDate = df.format(date); //แปลงคำสั่งจากdate เป็น staing
        String EmpnationID = empnationID.getText();
        String Prefixx = prefixx.getSelectedItem().toString();
        String Fname = Prefixx+fname.getText();
        String Lname = lname.getText();
        String Position = position.getSelectedItem().toString();
        String Degree = degree.getText();
        String Address = address.getText();
        String Telephone = telephone.getText();
        String Cost = cost.getText();
        
        String gender="";
        if(Prefixx.equals("นาย"))
            gender = "M";
        else if(Prefixx.equals("นาง") || Prefixx.equals("นางสาว"))
            gender = "F";

        if(EmpnationID.equals("") || Fname.equals("") || Lname.equals("") || Degree.equals("") || Address.equals("") || Telephone.equals("") || Cost.equals(""))
        {
            JOptionPane.showMessageDialog(null, "กรุณากรอกข้อมูลให้ครบทุกถ้วน");
            flag = false;
        }
        
        if(flag){
            if( isNumeric(EmpnationID))
            {
                if(EmpnationID.length()== 13)
              {
                 str1=funcEmpnationID(EmpnationID);
              }
                else
                {
                   JOptionPane.showMessageDialog(null, "กรุณากรอกเลขบัตรประชาชนให้ครบถ้วน");
                   flag = false;
                }
            }

            else{
                JOptionPane.showMessageDialog(null, "กรุณากรอกเลขบัตรประชาชนให้ถูกต้อง");
                flag = false;
            }
        }
       // String Telephone = telephone.getText();
       if(flag){
            if( isNumeric(Telephone))
            {
                if(Telephone.length()== 9 || Telephone.length()== 10)
                {
                  str2=FuncTelephone(Telephone);
                }
                else{
                    JOptionPane.showMessageDialog(null, "กรุณากรอกเบอร์โทรศัพท์ให้ครบถ้วน");
                    flag = false;
                }
            }
            else{
                JOptionPane.showMessageDialog(null, "กรุณากรอกเบอร์โทนศัพท์ให้ถูกต้อง");
                flag = false;
            }
       }

       if(flag){
            if(isNumeric(Cost) || FuncCost(Cost)) {
            }
            else
            {
                JOptionPane.showMessageDialog(null, "กรุณากรอกค่าจ้างให้ถูกต้อง");
                flag = false;    
            }
       }
 
        if(flag)
        {
         String sql ="INSERT INTO Employee(EMP_PERSON_ID,EMP_FNAME,EMP_LNAME,EMP_GENDER,EMP_POSITION,EMP_RANK,EMP_TELEPHONE,EMP_ADDRESS,EMP_CHG_HOUR,EMP_START_DATE,EMP_QUIT_DATE)\n"+
                    "VALUES('" + str1 +"',"+"'"+Fname+"',"+"'"+Lname+"',"+"'"+gender+"',"+"'"+Position+"',"+"'"+Degree+"',"+"'"+str2+"',"+"'"+Address+"',"+"'"+Cost+"',"+"'"+FDate+"',"+"Null"+")";
       
               System.out.print(sql);
                 try {
                    Connection conn = Gui_db.getConnection();
                    Statement stmt = conn.createStatement();
                    stmt.executeUpdate(sql);
                } catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                }
                EmployeeTable empT = new EmployeeTable();
                empT.callClearRow();
                empT.callShowDataRecord();
                JOptionPane.showMessageDialog(null, "เพิ่มข้อมูลเรียบร้อยแล้ว");
                clearTextBox();
        }
        
    }
    public static boolean isNumeric(String str)
    {
       return str.matches("-?\\d+(\\.\\d+)?");  //match a number with optional '-' and decimal.
    }
    public String funcEmpnationID(String EmpnationID)
    {
        String str1 = "";
        char ch;
       LinkedList<Character> linkedlist1 = new LinkedList<Character>();
              for(int i=0;i<EmpnationID.length();i++)
              {
                 ch = EmpnationID.charAt(i);
                 linkedlist1.add(ch);
              }
                linkedlist1.add(1, '-');
                linkedlist1.add(6, '-');
                linkedlist1.add(12, '-');
                linkedlist1.add(15, '-');
                Iterator it = linkedlist1.iterator();
                
                while(it.hasNext()){
                 str1 += "" + it.next();
                 
                }
                //flag = false;
          
        
       return str1;
        
    }
     public String FuncTelephone(String Telephone)
     {
         String str2 = "";
         char ch;
         LinkedList<Character> linkedlist2 = new LinkedList<Character>();
              for(int i=0;i<Telephone.length();i++)
              {
                 ch=Telephone.charAt(i);
                 linkedlist2.add(ch);
              }
              if(Telephone.length()== 10)
              {
                linkedlist2.add(3, '-');
                linkedlist2.add(7, '-');
                Iterator it = linkedlist2.iterator();
                while(it.hasNext()){
                 str2 += "" + it.next();
                 
                }
              }
              else if(Telephone.length()== 9)
              {
                linkedlist2.add(2, '-');
                linkedlist2.add(6, '-');
                Iterator it = linkedlist2.iterator();
                while(it.hasNext()){
                 str2 += "" + it.next();
                 
                }
              }
       return  str2;
     }
     public boolean FuncCost(String Cost)
     {
         try
         {
             Double.parseDouble(Cost);
         }
         catch(NumberFormatException e)
         { 
            //JOptionPane.showMessageDialog(null, "กรอกข้อมูลให้ถูกต้อง");
            return false;
         }
         return true;
     }
    
    public void clearTextBox() {
        empnationID.setText("");
        prefixx.setSelectedIndex(0);
        fname.setText("");
        lname.setText("");
        position.setSelectedIndex(0);
        degree.setText("");
        address.setText("");
        telephone.setText("");
        Date date = new Date();
        fdate.setDate(date);
        cost.setText("");

    }
    public void edit(){
        boolean flag = true;
        String str1="";
        String str2="";
        Date date = fdate.getDate();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd"); // ต้องมีรูปแบบ
        String FDate = df.format(date); //แปลงคำสั่งจากdate เป็น staing
        
        
        String lDate = null;
        
        if(ldate.getDate() != null ){
            Date date1 = ldate.getDate();
            DateFormat df1 = new SimpleDateFormat("yyyy-MM-dd"); 
            lDate =  "'" + df1.format(date1) + "'";
           
        
        }
       
        
        
            
            
            String EmpnationID = empnationID.getText();
            String Prefixx = prefixx.getSelectedItem().toString();
            String Fname = Prefixx+fname.getText();
            String Lname = lname.getText();
            String Position = position.getSelectedItem().toString();
            String Degree = degree.getText();
            String Address = address.getText();
            String Telephone = telephone.getText();

            String Cost = cost.getText();
            String gender="";
            if(Prefixx.equals("นาย"))
                gender = "M";
            else if(Prefixx.equals("นาง") || Prefixx.equals("นางสาว"))
                gender = "F";


           if(flag){
           if( isNumeric(EmpnationID) )
            {
                if(EmpnationID.length()== 13)
              {

                      str1=funcEmpnationID(EmpnationID);
              }
                else
                {
                   JOptionPane.showMessageDialog(null, "กรุณากรอกเลขบัตรประชาชนให้ครบถ้วน");
                   flag = false;
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "กรุณากรอกเลขบัตรประชาชนให้ถูกต้อง");
                flag = false;
            }
           }

           if(flag){
            if( isNumeric(Telephone))
            {
                if(Telephone.length()== 10 || Telephone.length()== 9)
                {
                     str2=FuncTelephone(Telephone);
                }
                else{
                    JOptionPane.showMessageDialog(null, "กรุณากรอกเบอร์โทรศัพท์ให้ครบถ้วน");
                    flag = false;
                }
            }
            else
            {
                   JOptionPane.showMessageDialog(null, "กรุณากรอกเบอร์โทนศัพท์ให้ถูกต้อง");
                   flag = false;
            }
           }

           if(flag){
            if(isNumeric(Cost) || FuncCost(Cost)) {
            }
            else
            {
                    JOptionPane.showMessageDialog(null, "กรุณากรอกค่าจ้างให้ถูกต้อง");
                    flag = false;   

            }
           } 
        
            
           if(flag){
               String sql ="UPDATE employee" + 
                " Set EMP_PERSON_ID = '" + str1 +"', EMP_GENDER = '"+ gender +"', EMP_FNAME= '"+ Fname +"', EMP_LNAME= '"+ Lname
                     +"', EMP_POSITION = '"+ Position +"', EMP_RANK = '"+ Degree +"', EMP_ADDRESS = '"+ Address +"', EMP_TELEPHONE = '"
                     + str2+"', EMP_START_DATE = '"+FDate+"',EMP_CHG_HOUR = '"+Cost+"'" + ", EMP_QUIT_DATE = " + lDate + "" + 
                " WHERE EMP_ID = "+ updateID + ";";
                System.out.print(sql);

                try {
                        Connection conn = Gui_db.getConnection();
                        Statement stmt = conn.createStatement();
                        stmt.executeUpdate(sql);

                } catch (SQLException ex) {
                            System.out.println(ex.getMessage());
                }

                EmployeeTable empT = new EmployeeTable();
                empT.callClearRow();
                empT.callShowDataRecord();
                JOptionPane.showMessageDialog(null, "แก้ไขข้อมูลเรียบร้อยแล้ว");
                empT.callEnableButtonCheck();
                clearTextBox();
                updateEmployee.dispose();
           }
            
            
            
            
        
        
        
        
     
            
            
            
            
            
            
            
            
            
            
       
                
    }
        
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        empnationID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        prefixx = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lname = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        position = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        degree = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        telephone = new javax.swing.JTextField();
        fdate = new com.toedter.calendar.JDateChooser();
        cost = new javax.swing.JTextField();
        submitButon = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        ldate = new JDateChooser();
        resetLdateBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(253, 227, 167));

        jLabel1.setFont(new java.awt.Font("TH SarabunPSK", 1, 36)); // NOI18N
        jLabel1.setText("เพิ่มข้อมูลพนักงาน");

        jLabel2.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel2.setText("*รหัสประจำตัวประชาชน");

        empnationID.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N

        jLabel3.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel3.setText("*คำนำหน้า");

        prefixx.setBackground(new java.awt.Color(218, 223, 225));
        prefixx.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        prefixx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "นาย", "นาง", "นางสาว" }));
        prefixx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefixxActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel4.setText("*ชื่อ\t");

        fname.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnameActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel5.setText("*นามสกุล");

        lname.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N

        jLabel6.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel6.setText("*ตำแหน่ง\t");

        position.setBackground(new java.awt.Color(218, 223, 225));
        position.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        position.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "หัวหน้า", "เลขา", "การเงิน", "พ่นสี", "หัวหน้าตั้งเครื่อง", "นายช่างใหญ่", "แพ็กของ,QC", "ปั๊มเหล็ก", "ตัดเหล็ก", "ขับรถ" }));

        jLabel7.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel7.setText("*ระดับ");

        degree.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N

        jLabel8.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel8.setText("*ที่อยู่");

        address.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel9.setText("*เบอร์โทรศัพท์");

        jLabel10.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel10.setText("*วันที่เข้าทำงาน\t");

        jLabel11.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel11.setText("*ค่าจ้างต่อชั่วโมง");

        telephone.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N

        fdate.setBackground(new java.awt.Color(218, 223, 225));
        fdate.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        fdate.setMaxSelectableDate(new java.util.Date(253370743311000L));

        fdate.setMinSelectableDate(new java.util.Date(-62135791089000L));
        Date date = new Date();
        Calendar c = Calendar.getInstance();
        c.setTime(date);
        c.set(Calendar.YEAR, 2017);
        fdate.setDate(c.getTime());

        cost.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        cost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costActionPerformed(evt);
            }
        });

        submitButon.setBackground(new java.awt.Color(218, 223, 225));
        submitButon.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        submitButon.setText("บันทึก");
        submitButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButonActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel12.setText("วันที่ลาออก");

        ldate.setMaxSelectableDate(new java.util.Date(253370743311000L));
        ldate.setMinSelectableDate(new java.util.Date(-62135791089000L));
        this.ldate.getCalendarButton().addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ldate.getJCalendar().getYearChooser().setYear(2017);

            }
        });
        ldate.setBackground(new java.awt.Color(218, 223, 225));
        ldate.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N

        resetLdateBtn.setBackground(new java.awt.Color(218, 223, 225));
        resetLdateBtn.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        resetLdateBtn.setText("รีเซ็ต");
        resetLdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetLdateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(empnationID)
                    .addComponent(address)
                    .addComponent(jLabel8)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(prefixx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(position, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(degree, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(telephone, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fdate, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ldate, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addComponent(resetLdateBtn)))
                .addContainerGap(80, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(submitButon, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(293, 293, 293))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(255, 255, 255))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(empnationID, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(prefixx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(position, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(degree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cost))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(telephone, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(ldate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(resetLdateBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(submitButon, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void prefixxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefixxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prefixxActionPerformed

    private void fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnameActionPerformed

    private void costActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void submitButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButonActionPerformed
        if(updateFlag) {
            edit();
        
        }
        else {
            
            insert();
            
            
           
        }
    }//GEN-LAST:event_submitButonActionPerformed

    private void resetLdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetLdateBtnActionPerformed
         updateEmployee.ldate.setCalendar(null);
    }//GEN-LAST:event_resetLdateBtnActionPerformed
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JTextField cost;
    private javax.swing.JTextField degree;
    private javax.swing.JTextField empnationID;
    private com.toedter.calendar.JDateChooser fdate;
    private javax.swing.JTextField fname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private com.toedter.calendar.JDateChooser ldate;
    private javax.swing.JTextField lname;
    private javax.swing.JComboBox<String> position;
    private javax.swing.JComboBox<String> prefixx;
    private javax.swing.JButton resetLdateBtn;
    private javax.swing.JButton submitButon;
    private javax.swing.JTextField telephone;
    // End of variables declaration//GEN-END:variables
}
