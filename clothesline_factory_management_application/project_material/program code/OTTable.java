/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui_db;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class OTTable extends javax.swing.JFrame {
              private static  OTTable ToT = new OTTable();
              private DefaultTableModel model = new DefaultTableModel();
              private Object[] data = new Object[0];
              private static String date = "";
              private static String timein = "";
              private static String timeout = "";
              private static String empName = "";
              private static String getEmpDateStart = null;
              private static String getEmpDateFinish = null;
    /**
     * Creates new form TimeEmpTable
     */
    public OTTable() {
        initComponents();
        model = (DefaultTableModel)ot_table.getModel(); 
        showDataRecord();
    }
    public void enableButtonCheck() {
        String check = getcheckID();
        String[] s = check.split(",");
        if(ot_table.getRowCount() > 0)
            checkAllButton.setEnabled(true);
        else
            checkAllButton.setEnabled(false);
        
        if (check.equals("")) {
            EditButton.setEnabled(false);
            DeleteButton.setEnabled(false);
            checkAllButton.setText("เลือกทั้งหมด");
        }
        
        else if (s.length == 1) {
            EditButton.setEnabled(true);
            DeleteButton.setEnabled(true);
            checkAllButton.setText("ยกเลิกการเลือก");
        }
        
        else {
            DeleteButton.setEnabled(true);
            EditButton.setEnabled(false);
        }
         
        
    }
    public String getcheckID()
   {
       String id="";
       for(int i=0;i<ot_table.getRowCount();i++)
       {
           if(Boolean.valueOf(ot_table.getValueAt(i, 0).toString()))
           {
               id += ot_table.getValueAt(i, 2).toString() +",";
               empName = ot_table.getValueAt(i, 3).toString();
               date = ot_table.getValueAt(i, 4).toString();
               timein = ot_table.getValueAt(i, 5).toString();
               timeout = ot_table.getValueAt(i, 6).toString();
               
           }
       }
       if(id.equals(""))
           return "";
       
       return id.substring(0, id.length()-1);
   }
    
    public void clearRow() {
        int row = model.getRowCount()-1;
        while(row > -1) {
            model.removeRow(row);
            row--;
        }
    }
     public void showDataRecord() {
              String sql = "select EMP_ID,EMP_FNAME,EMP_LNAME,OT_DATE,OT_START_TIME,OT_QUIT_TIME"
                      + " from OVER_TIME natural join employee" + " order by  OT_DATE desc , OT_START_TIME";
              
              try (Connection conn = Gui_db.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql)) {
                  
              int row=0;
              while (rs.next()) {
                model.addRow(data);
                model.setValueAt(false, row, 0);
                model.setValueAt(row+1, row, 1);
                model.setValueAt(rs.getString(1), row, 2);
                model.setValueAt(rs.getString(2) + " " + rs.getString(3), row, 3);
                model.setValueAt(rs.getString(4), row, 4);
                model.setValueAt(rs.getString(5), row, 5);
                model.setValueAt(rs.getString(6), row, 6);
                
             
                row++;
              }
              }catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                }
             
              
     }
    public void callEnableButtonCheck()
    {
        ToT.enableButtonCheck();
    }
    public void callClearRow() {
        ToT.clearRow();
    }
    
    public void callShowDataRecord() {
        ToT.showDataRecord();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchEmpFNameTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        searchEmpLNameTxt = new javax.swing.JTextField();
        searchEmpName = new javax.swing.JButton();
        searchSpecialBTN = new javax.swing.JButton();
        ResetEmpName = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ot_table = new javax.swing.JTable();
        checkAllButton = new javax.swing.JButton();
        Btn_MainMenu = new javax.swing.JButton();
        Btn_back = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        InsertButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(104, 195, 163));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(134, 226, 213));

        jLabel1.setFont(new java.awt.Font("TH SarabunPSK", 1, 36)); // NOI18N
        jLabel1.setText("ข้อมูลการทำงานเวลา OT ของพนักงาน");

        jLabel2.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel2.setText("ชื่อ");

        searchEmpFNameTxt.setBackground(new java.awt.Color(236, 240, 241));
        searchEmpFNameTxt.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        searchEmpFNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmpFNameTxtActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel3.setText("นามสกุล");

        searchEmpLNameTxt.setBackground(new java.awt.Color(236, 240, 241));
        searchEmpLNameTxt.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        searchEmpLNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmpLNameTxtActionPerformed(evt);
            }
        });

        searchEmpName.setBackground(new java.awt.Color(236, 240, 241));
        searchEmpName.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        searchEmpName.setText("ค้นหา");
        searchEmpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmpNameActionPerformed(evt);
            }
        });

        searchSpecialBTN.setBackground(new java.awt.Color(236, 240, 241));
        searchSpecialBTN.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        searchSpecialBTN.setText("ระบุเงื่อนไข");
        searchSpecialBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSpecialBTNActionPerformed(evt);
            }
        });

        ResetEmpName.setBackground(new java.awt.Color(236, 240, 241));
        ResetEmpName.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        ResetEmpName.setText("รีเซ็ต");
        ResetEmpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetEmpNameActionPerformed(evt);
            }
        });

        ot_table.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        ot_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "เลือก", "ลำดับ", "หมายเลขพนักงาน", "พนักงาน", "วันที่", "เวลาเข้า", "เวลาออก"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ot_table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ot_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ot_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ot_table);
        if (ot_table.getColumnModel().getColumnCount() > 0) {
            ot_table.getColumnModel().getColumn(0).setResizable(false);
            ot_table.getColumnModel().getColumn(0).setPreferredWidth(55);
            ot_table.getColumnModel().getColumn(1).setResizable(false);
            ot_table.getColumnModel().getColumn(1).setPreferredWidth(55);
            ot_table.getColumnModel().getColumn(2).setResizable(false);
            ot_table.getColumnModel().getColumn(2).setPreferredWidth(140);
            ot_table.getColumnModel().getColumn(3).setResizable(false);
            ot_table.getColumnModel().getColumn(3).setPreferredWidth(220);
            ot_table.getColumnModel().getColumn(4).setResizable(false);
            ot_table.getColumnModel().getColumn(4).setPreferredWidth(101);
            ot_table.getColumnModel().getColumn(5).setResizable(false);
            ot_table.getColumnModel().getColumn(5).setPreferredWidth(101);
            ot_table.getColumnModel().getColumn(6).setResizable(false);
            ot_table.getColumnModel().getColumn(6).setPreferredWidth(101);
        }

        checkAllButton.setBackground(new java.awt.Color(44, 62, 80));
        checkAllButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        checkAllButton.setForeground(new java.awt.Color(255, 255, 255));
        checkAllButton.setText("เลือกทั้งหมด");
        checkAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAllButtonActionPerformed(evt);
            }
        });

        Btn_MainMenu.setBackground(new java.awt.Color(236, 240, 241));
        Btn_MainMenu.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        Btn_MainMenu.setText("เมนูหลัก");
        Btn_MainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_MainMenuActionPerformed(evt);
            }
        });

        Btn_back.setBackground(new java.awt.Color(236, 240, 241));
        Btn_back.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        Btn_back.setText("ย้อนกลับ");
        Btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_backActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(134, 226, 213));

        InsertButton.setBackground(new java.awt.Color(236, 240, 241));
        InsertButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        InsertButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Win_10\\Downloads\\add (1).png")); // NOI18N
        InsertButton.setText(" เพิ่ม");
        InsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertButtonActionPerformed(evt);
            }
        });

        EditButton.setBackground(new java.awt.Color(236, 240, 241));
        EditButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        EditButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Win_10\\Downloads\\tools.png")); // NOI18N
        EditButton.setText("แก้ไข");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        DeleteButton.setBackground(new java.awt.Color(236, 240, 241));
        DeleteButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        DeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_db/delete (1).png"))); // NOI18N
        DeleteButton.setText(" ลบ");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(InsertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EditButton, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(DeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InsertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(266, 266, 266)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(checkAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(searchEmpFNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(searchEmpLNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(searchEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(searchSpecialBTN)
                                                .addGap(18, 18, 18)
                                                .addComponent(ResetEmpName)))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Btn_MainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(544, 544, 544))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(searchEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(searchSpecialBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ResetEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(searchEmpFNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(23, 23, 23)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(searchEmpLNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(checkAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(197, 197, 197))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Btn_MainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void InsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertButtonActionPerformed
        OTForm ot = new OTForm();
        
        ot.openinserFrame();
        
        
        
    }//GEN-LAST:event_InsertButtonActionPerformed

   
    public void openFrame() {
        ToT.clearRow();
        ToT.showDataRecord();
        ToT.enableButtonCheck();
        ToT.setVisible(true);
     }
    private void checkAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAllButtonActionPerformed
         if(checkAllButton.getText().equals("เลือกทั้งหมด")) {
            for(int i=0; i<ot_table.getRowCount(); i++)
                model.setValueAt(true, i, 0);
            checkAllButton.setText("ยกเลิกการเลือก");
        } else {
            for(int i=0; i<ot_table.getRowCount(); i++)
                model.setValueAt(false, i, 0);
            checkAllButton.setText("เลือกทั้งหมด");
        }
    }//GEN-LAST:event_checkAllButtonActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        String id = getcheckID();
        OTForm ot = new OTForm();
        DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        DateFormat formatter = new SimpleDateFormat("HH:mm:ss");
     
        
        try {
            java.sql.Time time1 = new java.sql.Time(formatter.parse(timein).getTime());
            java.sql.Time time2 = new java.sql.Time(formatter.parse(timeout).getTime());
            Date reportDate = format.parse(date);
            ot.setupdateFlag(true);
            ot.setUpdateForm(id,reportDate,empName, time1,time2, getOTId());
        } catch (ParseException ex) {
            Logger.getLogger(OTTable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         
          
         
    }//GEN-LAST:event_EditButtonActionPerformed

    private void ot_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ot_tableMouseClicked
        enableButtonCheck();
    }//GEN-LAST:event_ot_tableMouseClicked

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        String num[] = getcheckID().split(",");;
        String s[] = new String[3];
        Array(s);
        
        int YesOrNo = JOptionPane.showConfirmDialog(null,"ลบข้อมูลทั้งหมดจำนวน " + num.length + " แถว","คำเตือนในการลบ", JOptionPane.YES_NO_OPTION);
                if(YesOrNo == JOptionPane.YES_NO_OPTION){
                    String sql = "DELETE from OVER_TIME "+"WHERE EMP_ID in (" + s[0] +")" +" AND "
                                +"OT_DATE in (" + s[1] +")"+" AND "+"OT_START_TIME in (" + s[2] +")";
                    System.out.println(sql);
                try  {
                Connection conn = Gui_db.getConnection();
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.executeUpdate();
                
                }
               
               catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                        
                }
               ToT.clearRow();
               ToT.showDataRecord();
               enableButtonCheck();
               JOptionPane.showMessageDialog(this, "ลบข้อมูลเรียบร้อยแล้ว "); 
              }
                
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void searchEmpFNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmpFNameTxtActionPerformed
        showSearchEmpNameTimeWork();
    }//GEN-LAST:event_searchEmpFNameTxtActionPerformed

    private void searchEmpLNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmpLNameTxtActionPerformed
        showSearchEmpNameTimeWork();
    }//GEN-LAST:event_searchEmpLNameTxtActionPerformed

    private void searchEmpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmpNameActionPerformed
        showSearchEmpNameTimeWork();
    }//GEN-LAST:event_searchEmpNameActionPerformed

    private void searchSpecialBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSpecialBTNActionPerformed

        OTEmpFromSpecialSearch OTFSS = new OTEmpFromSpecialSearch();
        OTFSS.openFrame();
        

    }//GEN-LAST:event_searchSpecialBTNActionPerformed

    private void ResetEmpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetEmpNameActionPerformed
        openFrame();
        searchEmpFNameTxt.setText("");
        searchEmpLNameTxt.setText("");
        getEmpDateStart = null;
        getEmpDateFinish = null;
    }//GEN-LAST:event_ResetEmpNameActionPerformed

    private void Btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_backActionPerformed
        new EmpWorkTimeOrOT().setVisible(true);
        ToT.setVisible(false);
    }//GEN-LAST:event_Btn_backActionPerformed

    private void Btn_MainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_MainMenuActionPerformed
        new MainFrame().setVisible(true);
        ToT.setVisible(false);
    }//GEN-LAST:event_Btn_MainMenuActionPerformed

    public void showSearchEmpNameTimeWork(){
        ToT.clearRow();
        ToT.searchEmpNameTimeWork();
        ToT.enableButtonCheck();
        ToT.setVisible(true);




    }
    
    
    public void searchEmpNameTimeWork(){
      
        
        
        if(getEmpDateStart == null && getEmpDateFinish == null){
            String searchEmpFName = searchEmpFNameTxt.getText();
            String searchEmpLName = searchEmpLNameTxt.getText();
        
            String sql = "select EMP_ID,EMP_FNAME,EMP_LNAME,OT_DATE,OT_START_TIME,OT_QUIT_TIME"
                          + " from OVER_TIME natural join employee where EMP_FNAME like'%" +  searchEmpFName  + "%' and EMP_LNAME like'%" + searchEmpLName  + "%' order by OT_DATE desc , OT_START_TIME";

            try{
                Connection con = Gui_db.getConnection();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);

                int row = 0;
                while(rs.next()){
                    model.addRow(data);
                    model.setValueAt(false, row, 0);
                    model.setValueAt(row+1, row, 1);
                    model.setValueAt(rs.getString(1), row, 2);
                    model.setValueAt(rs.getString(2) + " " + rs.getString(3), row, 3);
                    model.setValueAt(rs.getString(4), row, 4);
                    model.setValueAt(rs.getString(5), row, 5);
                    model.setValueAt(rs.getString(6), row, 6);


                    row++;

                }



            }catch(SQLException ex){
                System.out.println(ex.getMessage());

            }
        }else{
            
            String searchEmpFName = searchEmpFNameTxt.getText();
            String searchEmpLName = searchEmpLNameTxt.getText();

            String sql = "select EMP_ID,EMP_FNAME,EMP_LNAME,OT_DATE,OT_START_TIME,OT_QUIT_TIME"
                          + " from OVER_TIME natural join employee where EMP_FNAME like'%" +  searchEmpFName  + "%' and EMP_LNAME like'%" + searchEmpLName  + "%' " +  
                          "and OT_DATE >= '" + getEmpDateStart  + "' and OT_DATE <= '" +  getEmpDateFinish  + "' order by  OT_DATE desc , OT_START_TIME";
            System.out.println(sql);
            try{
                Connection con = Gui_db.getConnection();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);

                int row = 0;
                while(rs.next()){
                    model.addRow(data);
                    model.setValueAt(false, row, 0);
                    model.setValueAt(row+1, row, 1);
                    model.setValueAt(rs.getString(1), row, 2);
                    model.setValueAt(rs.getString(2) + " " + rs.getString(3), row, 3);
                    model.setValueAt(rs.getString(4), row, 4);
                    model.setValueAt(rs.getString(5), row, 5);
                    model.setValueAt(rs.getString(6), row, 6);


                    row++;

                }



            }catch(SQLException ex){
                System.out.println(ex.getMessage());

            }
            
            
            
        }
       
        
        
        
        
        
        
        
    }
    
   
    public void showDataSpecialSearch(String EmpDateStart, String EmpDateFinish){
        getEmpDateStart = EmpDateStart;
        getEmpDateFinish = EmpDateFinish;
     
        ToT.clearRow();
        ToT.getDataSpecialSearch(EmpDateStart, EmpDateFinish);
        ToT.enableButtonCheck();  
        ToT.setVisible(true);
    }
    
    public void getDataSpecialSearch(String EmpDateStart, String EmpDateFinish){
       
        searchEmpFNameTxt.setText("");
        searchEmpLNameTxt.setText("");
        String sql = "SELECT EMP_ID,EMP_FNAME,EMP_LNAME,OT_DATE,OT_START_TIME,OT_QUIT_TIME " +
                     "FROM OVER_TIME NATURAL JOIN EMPLOYEE WHERE OT_DATE >= '" +  EmpDateStart + "' and OT_DATE <= '" +  EmpDateFinish +"' order by  OT_DATE desc , OT_START_TIME;";
        System.out.println(sql);
        try{
            Connection con = Gui_db.getConnection();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            int row = 0;
            while(rs.next()){
                model.addRow(data);
                model.setValueAt(false, row, 0);
                model.setValueAt(row+1, row, 1);
                model.setValueAt(rs.getString(1), row, 2);
                model.setValueAt(rs.getString(2) + " " + rs.getString(3), row, 3);
                model.setValueAt(rs.getString(4), row, 4);
                model.setValueAt(rs.getString(5), row, 5);
                model.setValueAt(rs.getString(6), row, 6);
                
             
                row++;
                
            }
            
            
            
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
            
        }

        
    }
    
    
    
    
    
    public void Array(String[] a) {
        a[0] = "";
        a[1] = "";
        a[2] = "";
        
       for(int i=0;i<ot_table.getRowCount();i++)
       {
           if(Boolean.valueOf(ot_table.getValueAt(i, 0).toString()))
           {
               a[0] += ot_table.getValueAt(i, 2).toString() +",";
               empName = ot_table.getValueAt(i, 3).toString();
                a[1] += "'"+ot_table.getValueAt(i, 4).toString()+"',";
                a[2] += "'"+ot_table.getValueAt(i, 5).toString()+"',";    
           }
       }
        a[0]=a[0].substring(0, a[0].length()-1);
        a[1]=a[1].substring(0, a[1].length()-1);
        a[2]=a[2].substring(0, a[2].length()-1);

                      
    }
    
    public String getOTId() {
        String id= getcheckID();
        String otId = "";
        String getOtId = "select OT_ID from OVER_TIME where OT_DATE = '" + date +"' and "+ "OT_START_TIME = '" + timein + "' and "
                       + "EMP_ID = " + id;
        
        System.out.println(getOtId);    
            try (Connection conn = Gui_db.getConnection();
                    Statement stmt = conn.createStatement();
                    ResultSet rs = stmt.executeQuery(getOtId)) {

                while (rs.next()) {
                    otId = rs.getString(1);
                }

                } catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                }
        return otId;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OTTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OTTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OTTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OTTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ToT.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_MainMenu;
    private javax.swing.JButton Btn_back;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JButton InsertButton;
    private javax.swing.JButton ResetEmpName;
    private javax.swing.JButton checkAllButton;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable ot_table;
    private javax.swing.JTextField searchEmpFNameTxt;
    private javax.swing.JTextField searchEmpLNameTxt;
    private javax.swing.JButton searchEmpName;
    private javax.swing.JButton searchSpecialBTN;
    // End of variables declaration//GEN-END:variables
}
