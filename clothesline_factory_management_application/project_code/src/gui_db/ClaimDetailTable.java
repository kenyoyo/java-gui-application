package gui_db;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author KAZDO
 */
public class ClaimDetailTable extends javax.swing.JFrame {

    private static ClaimDetailTable CLAIM_DETAIL_FRAME = new ClaimDetailTable();
    private static String CLAIM_ID = "";
    private Object[] data = new Object[0];
    DefaultTableModel model = new DefaultTableModel();
    private static TableColumn myTableColumn0;

    public ClaimDetailTable() {
        initComponents();
        model = (DefaultTableModel) ClaimDetailTable.getModel();

        //showDataRecord();
        //enableButtonCheck();
    }

    public void setClaim_IDtoCDT(String set) {
        CLAIM_ID = set;
    }

    public void openFrame(Boolean value) {
           TableColumnModel tcm = CLAIM_DETAIL_FRAME.ClaimDetailTable.getColumnModel();
        if (value == true) { // ดำเนินการเสร็จสมบูรณ์
            if(CLAIM_DETAIL_FRAME.ClaimDetailTable.getColumnCount() == 7) {
                myTableColumn0 = CLAIM_DETAIL_FRAME.ClaimDetailTable.getColumnModel().getColumn(0);
                tcm.removeColumn( tcm.getColumn(0) );
            }
            System.out.println("true");
            CLAIM_DETAIL_FRAME.poInsertButton.setVisible(false);
            CLAIM_DETAIL_FRAME.poEditButton.setVisible(false);
            CLAIM_DETAIL_FRAME.poDeleteButton.setVisible(false);
            CLAIM_DETAIL_FRAME.checkAllButton.setVisible(false);
            CLAIM_DETAIL_FRAME.clearRow();
            CLAIM_DETAIL_FRAME.showDataRecord();

        } else if (value == false) { // กำลังดำเนินการ
            if(CLAIM_DETAIL_FRAME.ClaimDetailTable.getColumnCount() == 6) {
                CLAIM_DETAIL_FRAME.ClaimDetailTable.getColumnModel().addColumn(myTableColumn0);
                CLAIM_DETAIL_FRAME.ClaimDetailTable.moveColumn(6, 0);
            }
            CLAIM_DETAIL_FRAME.poInsertButton.setVisible(true);
            CLAIM_DETAIL_FRAME.poEditButton.setVisible(true);
            CLAIM_DETAIL_FRAME.poDeleteButton.setVisible(true);
            CLAIM_DETAIL_FRAME.checkAllButton.setVisible(true);
            CLAIM_DETAIL_FRAME.clearRow();
            CLAIM_DETAIL_FRAME.showDataRecord();
            CLAIM_DETAIL_FRAME.enableButtonCheck();

        }

        CLAIM_DETAIL_FRAME.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        checkAllButton = new javax.swing.JButton();
        MainMenuButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ClaimDetailTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        poInsertButton = new javax.swing.JButton();
        poEditButton = new javax.swing.JButton();
        poDeleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(210, 215, 211));

        checkAllButton.setBackground(new java.awt.Color(44, 62, 80));
        checkAllButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        checkAllButton.setForeground(new java.awt.Color(255, 255, 255));
        checkAllButton.setText("เลือกทั้งหมด");
        checkAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAllButtonActionPerformed(evt);
            }
        });

        MainMenuButton.setBackground(new java.awt.Color(236, 240, 241));
        MainMenuButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        MainMenuButton.setText("เมนูหลัก");
        MainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainMenuButtonActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(236, 240, 241));
        backButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        backButton.setText("ย้อนกลับ");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("TH SarabunPSK", 1, 36)); // NOI18N
        jLabel1.setText("รายละเอียดการเคลม");

        ClaimDetailTable.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        ClaimDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "เลือก", "ลำดับ", "ประเภทสินค้า", "ประเภทการเคลม", "จำนวนสินค้าเคลม", "จำนวนสินค้าที่ซ่อมแล้ว", "เงินขาดทุน"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ClaimDetailTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        ClaimDetailTable.getTableHeader().setReorderingAllowed(false);
        ClaimDetailTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClaimDetailTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ClaimDetailTable);
        if (ClaimDetailTable.getColumnModel().getColumnCount() > 0) {
            ClaimDetailTable.getColumnModel().getColumn(0).setResizable(false);
            ClaimDetailTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            ClaimDetailTable.getColumnModel().getColumn(1).setResizable(false);
            ClaimDetailTable.getColumnModel().getColumn(1).setPreferredWidth(50);
            ClaimDetailTable.getColumnModel().getColumn(2).setResizable(false);
            ClaimDetailTable.getColumnModel().getColumn(2).setPreferredWidth(180);
            ClaimDetailTable.getColumnModel().getColumn(3).setResizable(false);
            ClaimDetailTable.getColumnModel().getColumn(3).setPreferredWidth(120);
            ClaimDetailTable.getColumnModel().getColumn(4).setResizable(false);
            ClaimDetailTable.getColumnModel().getColumn(4).setPreferredWidth(125);
            ClaimDetailTable.getColumnModel().getColumn(5).setResizable(false);
            ClaimDetailTable.getColumnModel().getColumn(5).setPreferredWidth(125);
            ClaimDetailTable.getColumnModel().getColumn(6).setResizable(false);
            ClaimDetailTable.getColumnModel().getColumn(6).setPreferredWidth(150);
        }

        jPanel1.setBackground(new java.awt.Color(210, 215, 211));

        poInsertButton.setBackground(new java.awt.Color(236, 240, 241));
        poInsertButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        poInsertButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_db/add (1).png"))); // NOI18N
        poInsertButton.setText(" เพิ่ม");
        poInsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poInsertButtonActionPerformed(evt);
            }
        });

        poEditButton.setBackground(new java.awt.Color(236, 240, 241));
        poEditButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        poEditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_db/tools.png"))); // NOI18N
        poEditButton.setText("แก้ไข");
        poEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poEditButtonActionPerformed(evt);
            }
        });

        poDeleteButton.setBackground(new java.awt.Color(236, 240, 241));
        poDeleteButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        poDeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_db/delete (1).png"))); // NOI18N
        poDeleteButton.setText(" ลบ");
        poDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poDeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(poInsertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(poEditButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(poDeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(poInsertButton, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(poEditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(poDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(402, 402, 402)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(MainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 18, Short.MAX_VALUE)
                        .addComponent(checkAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(264, 264, 264)
                        .addComponent(checkAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(225, 225, 225)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jLabel1)
                                .addGap(52, 52, 52)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 83, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void poInsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poInsertButtonActionPerformed
        ClaimDetailForm CDF = new ClaimDetailForm();
        CDF.setUpdateFlag(false);
        CDF.openInsertFrame();
    }//GEN-LAST:event_poInsertButtonActionPerformed

    private void poDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poDeleteButtonActionPerformed
        String checkRow = getCheckRow_PROD_NAME();
        String checkClaimType = getCheckRow_ClaimType();
        String[] s = checkRow.split(", ");
        String[] s1 = checkClaimType.split(", ");

        int reply = JOptionPane.showConfirmDialog(null, "ลบข้อมูลทั้งหมดจำนวน " + s.length + " แถว?",
                "แจ้งเตือน", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {

            for (int i = 0; i < s.length; i++) {
                deleteData(s[i], s1[i]);
            }

            JOptionPane.showMessageDialog(this, "ลบข้อมูลเรียบร้อยแล้ว!");
            clearRow();
            showDataRecord();
            enableButtonCheck();

        }

    }//GEN-LAST:event_poDeleteButtonActionPerformed

    public void deleteData(String prod_name, String ct_type) {

        String sql = "DELETE FROM CLAIM_DETAIL "
                + "WHERE PROD_ID = (SELECT PROD_ID FROM PRODUCT WHERE PROD_NAME = '" + prod_name + "') and CT_ID = (select CT_ID from claim_type where CT_TYPE = " + ct_type + ");";
        System.out.println(sql);
        try {
            Connection con = Gui_db.getConnection();
            Statement stmt = con.createStatement();
            stmt.executeUpdate(sql);

            new ClaimDetailForm().callUpdateClaimCost(Integer.parseInt(CLAIM_ID), prod_name);

        } catch (SQLException ex) {

            System.out.println(ex.getMessage());

        }

    }


    private void poEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poEditButtonActionPerformed
        ClaimDetailForm CDF = new ClaimDetailForm();
        CDF.setUpdateFlag(true);

        String[] getAll = new String[5];

        for (int i = 0; i < ClaimDetailTable.getRowCount(); i++) {
            if (Boolean.valueOf(ClaimDetailTable.getValueAt(i, 0).toString())) {
                getAll[0] = ClaimDetailTable.getValueAt(i, 2).toString(); // prod_name
                getAll[1] = ClaimDetailTable.getValueAt(i, 3).toString(); // claim_type
                getAll[2] = ClaimDetailTable.getValueAt(i, 4).toString(); // cd_amount
                getAll[3] = ClaimDetailTable.getValueAt(i, 5).toString(); // cd_repair
                //getAll[4] = ClaimDetailTable.getValueAt(i, 6).toString(); // cd_unit_cost
            }
        }

        CDF.setUpdateForm(getAll[0], getAll[1], getAll[2], getAll[3]);


    }//GEN-LAST:event_poEditButtonActionPerformed

    private void MainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainMenuButtonActionPerformed

    }//GEN-LAST:event_MainMenuButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        ClaimTable CT = new ClaimTable();
        CT.openFrame();
        CLAIM_DETAIL_FRAME.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void checkAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAllButtonActionPerformed
        if (checkAllButton.getText().equals("เลือกทั้งหมด")) {
            for (int i = 0; i < ClaimDetailTable.getRowCount(); i++) {
                model.setValueAt(true, i, 0);
            }
            checkAllButton.setText("ยกเลิกการเลือก");
        } else {
            for (int i = 0; i < ClaimDetailTable.getRowCount(); i++) {
                model.setValueAt(false, i, 0);
            }
            checkAllButton.setText("เลือกทั้งหมด");
        }

        enableButtonCheck();
    }//GEN-LAST:event_checkAllButtonActionPerformed

    private void ClaimDetailTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClaimDetailTableMouseClicked
        enableButtonCheck();
    }//GEN-LAST:event_ClaimDetailTableMouseClicked

    public void showDataRecord() {

        String sql1 = "SELECT PROD_NAME, CT_ID, CD_AMOUNT, CD_REPAIR, CD_UNIT_COST "
                + "FROM CLAIM_DETAIL NATURAL JOIN CLAIM NATURAL JOIN PRODUCT "
                + "WHERE C_ID = " + CLAIM_ID + ";";

        try {
            Connection conn1 = Gui_db.getConnection();
            Statement stmt1 = conn1.createStatement();
            ResultSet rs1 = stmt1.executeQuery(sql1);

            int r = 0;
            while (rs1.next()) {

                model.addRow(data);
                model.setValueAt(false, r, 0);
                model.setValueAt(r + 1, r, 1);
                model.setValueAt(rs1.getString(1), r, 2);

                String ct_idName = "";
                if (rs1.getString(2).equals("1")) {
                    ct_idName = "สินค้าเสียหาย";
                } else if (rs1.getString(2).equals("2")) {
                    ct_idName = "สินค้าผิดสเปค";
                }

                model.setValueAt(ct_idName, r, 3);
                model.setValueAt(rs1.getString(3), r, 4);
                model.setValueAt(rs1.getString(4), r, 5);
                model.setValueAt(rs1.getString(5), r, 6);

                r++;

            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

    }

    public String getCheckRow_PROD_NAME() {
        String checkRowPROD_NAME = "";
        for (int i = 0; i < ClaimDetailTable.getRowCount(); i++) {
            if (Boolean.valueOf(ClaimDetailTable.getValueAt(i, 0).toString())) {
                checkRowPROD_NAME += ClaimDetailTable.getValueAt(i, 2).toString() + ", ";
            }
        }

        return checkRowPROD_NAME;
    }

    public String getCheckRow_ClaimType() {
        String checkRowClaimType = "";
        for (int i = 0; i < ClaimDetailTable.getRowCount(); i++) {
            if (Boolean.valueOf(ClaimDetailTable.getValueAt(i, 0).toString())) {
                checkRowClaimType += "'" + ClaimDetailTable.getValueAt(i, 3).toString() + "', ";
            }
        }

        return checkRowClaimType;
    }

    public void clearRow() {
        int row = model.getRowCount() - 1;
        while (row > -1) {
            model.removeRow(row);
            row--;
        }
    }

    public void enableButtonCheck() {
        String check = getCheckRow_PROD_NAME();
        String[] s = check.split(", ");

        if (ClaimDetailTable.getRowCount() > 0) {
            checkAllButton.setEnabled(true);
        } else {
            checkAllButton.setEnabled(false);
        }

        if (s.length == 1 && s[0].equals("")) {
            poEditButton.setEnabled(false);
            poDeleteButton.setEnabled(false);
            checkAllButton.setText("เลือกทั้งหมด");
        } else if (s.length == 1) {
            poEditButton.setEnabled(true);
            poDeleteButton.setEnabled(true);
            checkAllButton.setText("ยกเลิกการเลือก");
        } else {
            poDeleteButton.setEnabled(true);
            poEditButton.setEnabled(false);

        }
    }

    public void callClearRow() {
        CLAIM_DETAIL_FRAME.clearRow();
    }

    public void callShowDataRecord() {
        CLAIM_DETAIL_FRAME.showDataRecord();
    }

    public void callEnableButtonCheck() {
        CLAIM_DETAIL_FRAME.enableButtonCheck();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ClaimDetailTable;
    private javax.swing.JButton MainMenuButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton checkAllButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton poDeleteButton;
    private javax.swing.JButton poEditButton;
    private javax.swing.JButton poInsertButton;
    // End of variables declaration//GEN-END:variables

}
