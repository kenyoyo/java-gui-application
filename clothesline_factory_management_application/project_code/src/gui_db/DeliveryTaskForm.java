/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui_db;

import com.toedter.calendar.JTextFieldDateEditor;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author KAZDO
 */
public class DeliveryTaskForm extends javax.swing.JFrame {
    private static DeliveryTaskForm INSERT_FRAME = new DeliveryTaskForm();
    private static DeliveryTaskForm UPDATE_FRAME = new DeliveryTaskForm();
    private static boolean updateFlag;
    private static String updateId;
    DefaultComboBoxModel dvModel = new DefaultComboBoxModel();
    /**
     * Creates new form OrderProductForm
     */
    public DeliveryTaskForm() {
        initComponents();
        setSelectedComponent();
    }
    
    public void setUpdateFlag(boolean value) {
        updateFlag = value;
    }
    
    public void setUpdateForm(String uId, String time, String eName, String cost) throws ParseException {
        updateId = uId;
        UPDATE_FRAME.deliverCBB.setSelectedItem(eName);
        UPDATE_FRAME.costText.setText(cost);
        DateFormat formatter = new SimpleDateFormat("HH:mm:ss");
        java.sql.Time timer = new java.sql.Time(formatter.parse(time).getTime());
        UPDATE_FRAME.bringMatTimePicker.setValue(timer);
        UPDATE_FRAME.setVisible(true);
    }
    
    public void setInsertForm(String uId) {
       updateId = uId;
       INSERT_FRAME.titleLabel.setText("เพิ่มข้อมูลการส่งสินค้า");
       INSERT_FRAME.costText.setText("");
       INSERT_FRAME.deliverCBB.setSelectedIndex(0);
       INSERT_FRAME.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        deliverCBB = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        costText = new javax.swing.JTextField();
        Date date = new Date();
        SpinnerDateModel sm =
        new SpinnerDateModel(date, null, null, Calendar.HOUR_OF_DAY);
        bringMatTimePicker = new javax.swing.JSpinner(sm);
        submitBtn = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(162, 222, 208));

        jLabel3.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel3.setText("ค่าใช้จ่ายในการส่งสินค้า");

        jLabel1.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel1.setText("*พนักงานขับรถ");

        deliverCBB.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        deliverCBB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel2.setText("*เวลาออกส่งรอบนี้");

        costText.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        costText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costTextActionPerformed(evt);
            }
        });

        JSpinner.DateEditor de = new JSpinner.DateEditor(bringMatTimePicker, "HH:mm:ss");
        bringMatTimePicker.setEditor(de);
        bringMatTimePicker.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N

        submitBtn.setBackground(new java.awt.Color(236, 240, 241));
        submitBtn.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        submitBtn.setText("บันทึก");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("TH SarabunPSK", 1, 36)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("แก้ไขข้อมูลการส่งสินค้า");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bringMatTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(costText, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deliverCBB, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(titleLabel)
                .addGap(34, 34, 34)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bringMatTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(costText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deliverCBB, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        DeliveryTable DT = new DeliveryTable();
        if(updateFlag) {   
            editData();
            DT.callEnableButtonCheck();
        }
        else {
            insertData();
            DT.callEnableButtonCheck();
        }
    }//GEN-LAST:event_submitBtnActionPerformed

    private void costTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costTextActionPerformed
    
    public void insertData() {
        String cost = costText.getText();
        if(isNumeric(cost) || cost.equals("")) {
            if(cost.equals(""))
                cost = null;
            Date time = (Date) bringMatTimePicker.getValue();
            DateFormat tf = new SimpleDateFormat("HH:mm:ss");
            String reportTime = tf.format(time);
            String employee = deliverCBB.getSelectedItem().toString();
            String[] splitName = employee.split(" ");

            String sql = "INSERT INTO deli_task(DTASK_COST, DTASK_AMOUNT, DTASK_TIME, EMP_ID, DELI_ID)\n" +
                         "VALUES(" + cost + ", 0, '" + reportTime + "', " + 
                         "(select EMP_ID from employee where " + 
                         "EMP_FNAME = '" + splitName[0] + "' and EMP_LNAME = '" + splitName[1] +"'), " + updateId + ")";
                try {
                    Connection conn = Gui_db.getConnection();
                    Statement stmt = conn.createStatement();
                    stmt.executeUpdate(sql);
                } catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                }
                
                
            DeliveryTaskTable dtt = new DeliveryTaskTable();
            dtt.callClearRow();
            dtt.callShowDataRecord();
            JOptionPane.showMessageDialog(null, "เพิ่มข้อมูลเรียบร้อยแล้ว");
            clearTextBox();
        } else {
            JOptionPane.showMessageDialog(null, "กรุณาใส่ข้อมูลค่าใช้จ่ายให้ถูกต้อง");
        }
    }
    
    public void editData() {
        String cost = costText.getText();
        if(isNumeric(cost) || cost.equals("")) {
            if(cost.equals(""))
                cost = null;
            Date time = (Date) bringMatTimePicker.getValue();
            DateFormat tf = new SimpleDateFormat("HH:mm:ss");
            String reportTime = tf.format(time);
            String employee = deliverCBB.getSelectedItem().toString();
            String[] splitName = employee.split(" ");

            String sql = "UPDATE deli_task " + 
                         "SET DTASK_COST = " + cost + ", " +
                         "DTASK_TIME = '" + reportTime + "', "+
                         "EMP_ID = (select EMP_ID from employee where EMP_FNAME = '"+ splitName[0] + "' and EMP_LNAME = '" + splitName[1] + "') " +   
                         "WHERE DTASK_ID = " + updateId; 
                try {
                    Connection conn = Gui_db.getConnection();
                    Statement stmt = conn.createStatement();
                    stmt.executeUpdate(sql);
                } catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                }
            DeliveryTaskTable dtt = new DeliveryTaskTable();
            dtt.callClearRow();
            dtt.callShowDataRecord();
            JOptionPane.showMessageDialog(null, "แก้ไขข้อมูลเรียบร้อยแล้ว");
            UPDATE_FRAME.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "กรุณาใส่ข้อมูลค่าใช้จ่ายให้ถูกต้อง");
        }
    }
    
    private void setSelectedComponent() {
        String sql = "select EMP_FNAME, EMP_LNAME from employee where EMP_POSITION = 'ขับรถ'";
            try (Connection conn = Gui_db.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql)) {

            // loop through the result set
            while (rs.next()) {
                dvModel.addElement(rs.getString(1) + " " + rs.getString(2));
            }
            
            } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
            }
        deliverCBB.setModel(dvModel);
    }
    
    public void clearTextBox() {
       INSERT_FRAME.costText.setText("");
       INSERT_FRAME.deliverCBB.setSelectedIndex(0);
    }
    
    public static boolean isNumeric(String str) {
        return str.matches("-?\\d+(\\.\\d+)?");  //match a number with optional '-' and decimal.
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner bringMatTimePicker;
    private javax.swing.JTextField costText;
    private javax.swing.JComboBox<String> deliverCBB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton submitBtn;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
