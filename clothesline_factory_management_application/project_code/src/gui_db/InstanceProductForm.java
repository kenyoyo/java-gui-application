/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui_db;

import com.toedter.calendar.JTextFieldDateEditor;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author KAZDO
 */
public class InstanceProductForm extends javax.swing.JFrame {
    private static InstanceProductForm INSERT_FRAME = new InstanceProductForm();
    private static InstanceProductForm UPDATE_FRAME = new InstanceProductForm();
    private static boolean updateFlag = false;
    private static String billTypeName = "";
    private static int countDataInrowFormIPF = 1;
    private static String updateId = "";
    private static String orderProductId = "";
    /**
     * Creates new form OrderProductForm
     */
    public InstanceProductForm() {
        initComponents();
    }
    
    public void setOrderProductId(String id) {
        orderProductId = id;
    }
    
    public void sentBillTypeName(String billtypename){
        billTypeName = billtypename;
    }
    
    public void setUpdateForm(String id, Date date) {
        JTextFieldDateEditor editor = (JTextFieldDateEditor) UPDATE_FRAME.orderDatePicker.getDateEditor();
        editor.setEditable(false);
        UPDATE_FRAME.titleLabel.setText("แก้ไขข้อมูลงวด");
        UPDATE_FRAME.updateId = id;
        UPDATE_FRAME.orderDatePicker.setDate(date);
        UPDATE_FRAME.setVisible(true);
    }
    
    public void setUpdateFlag(boolean value) {
        UPDATE_FRAME.updateFlag = value;
    }
    
    public void openInsertFrame() {
        JTextFieldDateEditor editor = (JTextFieldDateEditor) INSERT_FRAME.orderDatePicker.getDateEditor();
        editor.setEditable(false);
        INSERT_FRAME.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        orderDatePicker = new com.toedter.calendar.JDateChooser();
        submitBtn = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(243, 156, 18));

        jLabel3.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel3.setText("วันที่ส่งงวด");

        orderDatePicker.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        orderDatePicker.setMaxSelectableDate(new java.util.Date(253370743311000L));
        orderDatePicker.setMinSelectableDate(new java.util.Date(-62135791089000L));
        Date date = new Date();
        Calendar c = Calendar.getInstance();
        c.setTime(date);
        c.set(Calendar.YEAR, 2017);
        orderDatePicker.setDate(c.getTime());

        submitBtn.setBackground(new java.awt.Color(236, 240, 241));
        submitBtn.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        submitBtn.setText("บันทึก");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("TH SarabunPSK", 1, 36)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("เพิ่มข้อมูลงวด");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(orderDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(131, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(209, 209, 209))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(titleLabel)
                .addGap(30, 30, 30)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(orderDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private static boolean flag = false;
    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        if(updateFlag) {
            editData();
        }
        else
            if(billTypeName.equals("บิลรายงวด")){ // ประเภท บิลรายงวด
               
                 System.out.println("บิลรายงวด");
                insertData();
                
                BillForm BF = new BillForm();
                
                if(flag==false){ //กรณีเกิด catch exception จะปิด frame bill ลงและอยู่หน้า insert instance เพื่อ insert วันที่ส่งงวดใหม่
                    
                    BF.disposeInsertBill();
                    
                }else{ // กรณีเพิ่มข้อมูลได้ปกติ จะเปิด frame bill เพิ่ม insert bill และ update Instance set bill_id = ?
                    
                    INSERT_FRAME.dispose();
                    BF.setUpdateFlag(false);
                    BF.openInsertFrame();
                    BF.setDisableCloseButton(); // ปิดปุ่มปิดเพิ่มข้อมูลบิล ถ้าถ้ากดปิด บิลจะไม่ถูกส้ราง 
                    
                   
               
                }
               
                
            }else if(billTypeName.equals("บิลรวมงวด")){ // ประเภท บิลรวมงวด 
                
                InstanceProductTable IPT = new InstanceProductTable();
                BillForm BF = new BillForm();
                
                System.out.println("บิลรวมงวด");
                insertData();
               
                if(flag==false){ //กรณีเกิด catch exception จะปิด frame bill ลงและอยู่หน้า insert instance เพื่อ insert วันที่ส่งงวดใหม่
                  
                    BF.disposeInsertBill();
                
                }else{
                   
                    
                    
                    if(IPT.checkDataInRow() == 1){
                        INSERT_FRAME.dispose();
                        BF.setUpdateFlag(false);
                        BF.openInsertFrame();
                        BF.setDisableCloseButton();
                    }else if(IPT.checkDataInRow() >= 2){
                        INSERT_FRAME.dispose();
                        
                        
                        String sql1 = "select bill_id from instance where porder_id = " + orderProductId + " order by bill_id desc limit 1;";
                        try{
                            
                            Connection con1 = Gui_db.getConnection();
                            Statement stmt1 = con1.createStatement();
                            ResultSet rs1 = stmt1.executeQuery(sql1);
                
                            while(rs1.next()){    
                                String sql = "UPDATE instance " + 
                                             "SET BILL_ID = " + rs1.getString(1)  + " " + 
                                             "WHERE INSTANCE_ID = (select instance_id where instance_deli_date = '" + getInstance_deli_date() + "'" +  " and porder_id = " +  orderProductId + ")"; 
                                System.out.println(sql);

                                try{
                                    Connection con = Gui_db.getConnection();
                                    Statement stmt = con.createStatement();
                                    stmt.executeUpdate(sql);

                                }catch(SQLException ex){
                                    System.out.println(ex.getMessage());
                                }
                        
                            }
                            
                            
                        }catch(SQLException ex){
                            System.out.println(ex.getMessage());
                            
                        }
                        
                        
                        
                        
                        
                        
                        
                        
                    }
                    
                    
                 
                    
                    
                    
                    
                    
                    
                    
                    
                    
                }
                
                
               
                
            
                
            }
    }//GEN-LAST:event_submitBtnActionPerformed
    
    public void sentCheckDataInRow(int getData){
        countDataInrowFormIPF = getData;
       
    }
    
    public String getInstance_deli_date(){
        Date date = INSERT_FRAME.orderDatePicker.getDate();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String instance_deli_date = df.format(date);
        return instance_deli_date;
    }
    
    
    
    public void updateInstanceByBill_ID(String instance_id){
   
        String sql = "UPDATE instance " + 
                     "SET BILL_ID = (select bill_id from bills order by bill_id desc limit 1) " + 
                     "WHERE INSTANCE_ID = " + instance_id; 
        System.out.println("sql\n" + sql);
        try{
            Connection con = Gui_db.getConnection();
            Statement stmt = con.createStatement();
            stmt.executeUpdate(sql);
            
            
        }catch(SQLException ex){
            System.out.print(ex.getMessage());
        }   
        
        
        
        
        
        
        
    }
    
    public void insertData() {
        Date date = orderDatePicker.getDate();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String reportDate = df.format(date);
        String sql = "INSERT INTO instance(INSTANCE_TOTAL_AMOUNT, INSTANCE_TOTAL_PRICE, INSTANCE_DELI_DATE, PORDER_ID, BILL_ID)\n" +
                     "VALUES(0, 0.0, '" + reportDate + "', " + orderProductId + ", " + null + ");";
            
            try {
                Connection conn = Gui_db.getConnection();
                Statement stmt = conn.createStatement();
                stmt.executeUpdate(sql);
                    
                  InstanceProductTable opt = new InstanceProductTable();
                    flag = true;
                    opt.callClearRow();
                    opt.callShowDataRecord();
                    opt.callEnableButtonCheck();
                    JOptionPane.showMessageDialog(null, "เพิ่มข้อมูลเรียบร้อยแล้ว");
                    clearTextBox();

                
            } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
                    flag = false;
                    BillForm BF = new BillForm();
                    BF.disposeInsertBill();
                    JOptionPane.showMessageDialog(null, "การเพิ่มข้อมูลล้มเหลว เนื่องจากมีวันที่ส่งงวดดังกล่าว" + "\n" + "\t\tในออเดอร์สินค้าหมายเลข " +  orderProductId  + " อยู่แล้ว" );
                   
            
            }
    }
    
    public void editData() {
        Date date = orderDatePicker.getDate();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String reportDate = df.format(date);
        String sql = "UPDATE instance " + 
                     "SET INSTANCE_DELI_DATE = '" + reportDate + "' " + 
                     "WHERE INSTANCE_ID = " + updateId; 
            try {
                Connection conn = Gui_db.getConnection();
                Statement stmt = conn.createStatement();
                stmt.executeUpdate(sql);
            } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
            }
        InstanceProductTable ipt = new InstanceProductTable();
        ipt.callClearRow();
        ipt.callShowDataRecord();
        ipt.callEnableButtonCheck();
        JOptionPane.showMessageDialog(null, "แก้ไขข้อมูลเรียบร้อยแล้ว");
        UPDATE_FRAME.dispose();
    }
    
    public void clearTextBox() {
        //orderDatePicker.set
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private com.toedter.calendar.JDateChooser orderDatePicker;
    private javax.swing.JButton submitBtn;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
