/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gui_db;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author KAZDO
 */
public class BillTable extends javax.swing.JFrame {
    private static BillTable BillTable_FRAME = new BillTable();
    private static String customerId = "";
    private DefaultTableModel model = new DefaultTableModel();
    private Object[] data = new Object[0];
    private static String startDate = "";
    private static String finishDate = "";
    
    public BillTable() {
        initComponents();
        model = (DefaultTableModel) Bill_Table.getModel();
        
     
    }
    
    public void openFrame() {
        BillTable_FRAME.clearRow();
        BillTable_FRAME.showDataRecord();
        BillTable_FRAME.enableButtonCheck();
        BillTable_FRAME.setVisible(true);
    }
    
     public void openSeacrh() {
        BillTable_FRAME.clearRow();
        BillTable_FRAME.showSearch();
        BillTable_FRAME.setVisible(true);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        poEditButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Bill_Table = new javax.swing.JTable();
        checkAllButton = new javax.swing.JButton();
        instanceManageButton = new javax.swing.JButton();
        MainMenuButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(129, 207, 224));

        poEditButton.setBackground(new java.awt.Color(236, 240, 241));
        poEditButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        poEditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_db/tools.png"))); // NOI18N
        poEditButton.setText("แก้ไข");
        poEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poEditButtonActionPerformed(evt);
            }
        });

        Bill_Table.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        Bill_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "เลือก", "ลำดับ", "หมายเลขบิล", "ยอดเงินรวมในบิล", "วันวางบิล", "วันรับเงิน", "สถานะบิล"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Bill_Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        Bill_Table.getTableHeader().setReorderingAllowed(false);
        Bill_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Bill_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Bill_Table);
        if (Bill_Table.getColumnModel().getColumnCount() > 0) {
            Bill_Table.getColumnModel().getColumn(0).setResizable(false);
            Bill_Table.getColumnModel().getColumn(0).setPreferredWidth(50);
            Bill_Table.getColumnModel().getColumn(1).setResizable(false);
            Bill_Table.getColumnModel().getColumn(1).setPreferredWidth(50);
            Bill_Table.getColumnModel().getColumn(2).setResizable(false);
            Bill_Table.getColumnModel().getColumn(3).setResizable(false);
            Bill_Table.getColumnModel().getColumn(3).setPreferredWidth(140);
            Bill_Table.getColumnModel().getColumn(4).setResizable(false);
            Bill_Table.getColumnModel().getColumn(4).setPreferredWidth(110);
            Bill_Table.getColumnModel().getColumn(5).setResizable(false);
            Bill_Table.getColumnModel().getColumn(5).setPreferredWidth(110);
            Bill_Table.getColumnModel().getColumn(6).setResizable(false);
            Bill_Table.getColumnModel().getColumn(6).setPreferredWidth(120);
        }

        checkAllButton.setBackground(new java.awt.Color(44, 62, 80));
        checkAllButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        checkAllButton.setForeground(new java.awt.Color(255, 255, 255));
        checkAllButton.setText("เลือกทั้งหมด");
        checkAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAllButtonActionPerformed(evt);
            }
        });

        instanceManageButton.setBackground(new java.awt.Color(236, 240, 241));
        instanceManageButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        instanceManageButton.setText("งวดวางบิล");
        instanceManageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instanceManageButtonActionPerformed(evt);
            }
        });

        MainMenuButton.setBackground(new java.awt.Color(236, 240, 241));
        MainMenuButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        MainMenuButton.setText("เมนูหลัก");
        MainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainMenuButtonActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(236, 240, 241));
        backButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        backButton.setText("ย้อนกลับ");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("TH SarabunPSK", 1, 40)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("บิล");

        jButton1.setBackground(new java.awt.Color(236, 240, 241));
        jButton1.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jButton1.setText("ระบุเงื่อนไข");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(236, 240, 241));
        jButton2.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jButton2.setText("รีเซ็ต");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(checkAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 17, Short.MAX_VALUE)))
                .addGap(19, 19, 19)
                .addComponent(poEditButton)
                .addGap(40, 40, 40))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton)
                .addGap(387, 387, 387)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(instanceManageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(452, 452, 452))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(263, 263, 263)
                                .addComponent(checkAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(323, 323, 323)
                                .addComponent(poEditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(208, 208, 208)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(instanceManageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(MainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void poEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poEditButtonActionPerformed
        BillForm BF = new BillForm();
        String checkBillDate = getCheckBillDate();
        String[] billDate = checkBillDate.split(", ");
        String checkBillRemDate = getCheckBillRemDate();
        String[] billRemDate = checkBillRemDate.split(", ");
        String billStatus = getCheckBillStatus();
        String[] bill_status = billStatus.split(", ");
        String bill_ID = getCheckRow();
        String[] bill_id = bill_ID.split(", ");
        try {
            
            BF.setUpdateForm(bill_id[0], billDate[0], billRemDate[0], bill_status[0]);
        } catch (ParseException ex) {
            Logger.getLogger(BillTable.class.getName()).log(Level.SEVERE, null, ex);
        }
        BF.setUpdateFlag(true);
       
            
    
    }//GEN-LAST:event_poEditButtonActionPerformed

    private void Bill_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Bill_TableMouseClicked
        enableButtonCheck();
    }//GEN-LAST:event_Bill_TableMouseClicked

    private void MainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainMenuButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MainMenuButtonActionPerformed

    private void checkAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAllButtonActionPerformed
        if(checkAllButton.getText().equals("เลือกทั้งหมด")) {
            for(int i=0; i<Bill_Table.getRowCount(); i++)
                model.setValueAt(true, i, 0);
            checkAllButton.setText("ยกเลิกการเลือก");
        } else {
            for(int i=0; i<Bill_Table.getRowCount(); i++)
                model.setValueAt(false, i, 0);
            checkAllButton.setText("เลือกทั้งหมด");
        }

        enableButtonCheck();
    }//GEN-LAST:event_checkAllButtonActionPerformed

    private void instanceManageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instanceManageButtonActionPerformed
        String check = getCheckRow();
        String[] s = check.split(", ");
        BillInstanceTable BIT = new BillInstanceTable();
        BIT.setBillID(s[0]);
        BIT.openFrame();
        BIT.callClearRow();
        BIT.callShowDataRecord();
        BillTable_FRAME.dispose();
    }//GEN-LAST:event_instanceManageButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        new OrderMenu().setVisible(true);
        BillTable_FRAME.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        BillTable_FRAME.openFrame();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       BillSearch BS = new BillSearch();
       BS.openInsertFrame();
    }//GEN-LAST:event_jButton1ActionPerformed

     
    public void showDataRecord() {
            String sql = "select BILL_ID, BILL_PRICE, BILL_DATE , BILL_REM_DATE, BILL_STATUS " + 
                         "from BILLS order by BILL_ID DESC;";
            try (Connection conn = Gui_db.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql)) {

            // loop through the result set
            int row=0;
            while (rs.next()) {
                model.addRow(data);
                model.setValueAt(false, row, 0);
                model.setValueAt(row+1, row, 1);
                model.setValueAt(rs.getString(1), row, 2);
                model.setValueAt(rs.getString(2), row, 3);
                model.setValueAt(rs.getString(3), row, 4);
                model.setValueAt(rs.getString(4), row, 5);
                
                String billStatus = "";
                if(rs.getString(5).equals("1")){
                    billStatus = "ชำระเงินเรียบร้อย";
                }else if(rs.getString(5).equals("2")){
                    billStatus = "ยังไม่ได้ชำระเงิน";
                }
                model.setValueAt(billStatus, row, 6);
                row++;
            }
            
            } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
            }
    }
    
    public void showSearch(){
        String sql = "select BILL_ID, BILL_PRICE, BILL_DATE , BILL_REM_DATE, BILL_STATUS " + 
                         "from BILLS where BILL_DATE >= '" + startDate + "' and BILL_DATE <= '" + finishDate + "'"+ "order by BILL_ID DESC;";
            try (Connection conn = Gui_db.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql)) {

            // loop through the result set
            int row=0;
            while (rs.next()) {
                model.addRow(data);
                model.setValueAt(false, row, 0);
                model.setValueAt(row+1, row, 1);
                model.setValueAt(rs.getString(1), row, 2);
                model.setValueAt(rs.getString(2), row, 3);
                model.setValueAt(rs.getString(3), row, 4);
                model.setValueAt(rs.getString(4), row, 5);
                
                String billStatus = "";
                if(rs.getString(5).equals("1")){
                    billStatus = "ชำระเงินเรียบร้อย";
                }else if(rs.getString(5).equals("2")){
                    billStatus = "ยังไม่ได้ชำระเงิน";
                }
                model.setValueAt(billStatus, row, 6);
                row++;
            }
            
            } catch (SQLException ex) {
                    System.out.println(ex.getMessage());
            }
    }   
     public void setDate1(String date1) {
         startDate = date1;
    }
    public void setDate2(String date2) {
         finishDate = date2;
    }
    public void deleteData(String id) {
        String sql = "delete from product_order where PORDER_ID = " + id  ;
        
        try {
            Connection conn = Gui_db.getConnection();
            Statement stmt = conn.createStatement();
            stmt.executeUpdate(sql);
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    public String getCheckRow() {
        String checkRow="";
        for(int i=0; i<Bill_Table.getRowCount(); i++) {
            if(Boolean.valueOf(Bill_Table.getValueAt(i, 0).toString())) {
                checkRow += Bill_Table.getValueAt(i, 2).toString() + ", ";
                
            }
        }
        
        return checkRow;
    }
    
    
    
   
    public String getCheckBillDate(){
        String checkBillDate = "";
        for(int i=0; i<Bill_Table.getRowCount(); i++) {
            if(Boolean.valueOf(Bill_Table.getValueAt(i, 0).toString())) {
                checkBillDate += Bill_Table.getValueAt(i, 4).toString() + ", ";
                
            }
        }
        return checkBillDate;
       
    }
    
    
    public String getCheckBillRemDate(){
        String checkBillRemDate = "";
        for(int i=0; i<Bill_Table.getRowCount(); i++) {
            if(Boolean.valueOf(Bill_Table.getValueAt(i, 0).toString())) {
                checkBillRemDate += Bill_Table.getValueAt(i, 5).toString() + ", ";
                
            }
        }
        return checkBillRemDate;   
    }
    
    
     
    public String getCheckBillStatus(){
        String checkBillSatus = "";
        for(int i=0; i<Bill_Table.getRowCount(); i++) {
            if(Boolean.valueOf(Bill_Table.getValueAt(i, 0).toString())) {
                checkBillSatus += Bill_Table.getValueAt(i, 6).toString() + ", ";
                
            }
        }
        return checkBillSatus;   
    }
    
    
    
    public void clearRow() {
        int row = model.getRowCount()-1;
        while(row > -1) {
            model.removeRow(row);
            row--;
        }
    }
    
    public void enableButtonCheck() {
        String check = getCheckRow();
        String[] s = check.split(", ");
        if(Bill_Table.getRowCount() > 0)
            checkAllButton.setEnabled(true);
        else
            checkAllButton.setEnabled(false);
        
        if (s.length == 1 && s[0].equals("")) {
            poEditButton.setEnabled(false);
           
            instanceManageButton.setEnabled(false);
            checkAllButton.setText("เลือกทั้งหมด");
        }
        
        else if (s.length == 1) {
            poEditButton.setEnabled(true);
          
            instanceManageButton.setEnabled(true);
            checkAllButton.setText("ยกเลิกการเลือก");
        }
        
        else {
          
            poEditButton.setEnabled(false);
            instanceManageButton.setEnabled(false);
        }
    }
    
    public void callClearRow() {
        BillTable_FRAME.clearRow();
    }
    
    public void callShowDataRecord() {
        BillTable_FRAME.showDataRecord();
    }
    
    public void callEnableButtonCheck() {
        BillTable_FRAME.enableButtonCheck();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Bill_Table;
    private javax.swing.JButton MainMenuButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton checkAllButton;
    private javax.swing.JButton instanceManageButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JButton poEditButton;
    // End of variables declaration//GEN-END:variables

}