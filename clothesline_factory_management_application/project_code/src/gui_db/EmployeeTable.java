/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui_db;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author user
 */
public class EmployeeTable extends javax.swing.JFrame {

    private static EmployeeTable empT = new EmployeeTable();

    private DefaultTableModel model = new DefaultTableModel();
    private Object[] data = new Object[0];
    TextAreaRenderer textAreaRenderer = new TextAreaRenderer();
    TextAreaEditor textAreaEditor = new TextAreaEditor();
    private static String getEmpGender = null;
    private static String getEmpPosition = null;

    /**
     * Creates new form Employee
     */
    public EmployeeTable() {
        initComponents();
        setTabel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        emp_Table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Btn_checkAll = new javax.swing.JButton();
        searchEmpFNameTxt = new javax.swing.JTextField();
        searchEmpLNameTxt = new javax.swing.JTextField();
        searchEmpName = new javax.swing.JButton();
        searchSpecialBTN = new javax.swing.JButton();
        ResetEmpName = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Btn_MainMenu = new javax.swing.JButton();
        Btn_back = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        insertButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ข้อมูลพนักงาน");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(233, 212, 96));

        emp_Table.setBackground(new java.awt.Color(218, 223, 225));
        emp_Table.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        emp_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "เลือก", "ลำดับ", "หมายเลขพนักงาน", "สถานะทำงาน", "เลขบัตรประจำตัวประชาชน", "ชื่อ", "นามสกุล", "เพศ", "ระดับ", "ตำแหน่ง", "เบอร์", "ที่อยู่", "ค่าจ้างต่อชั่วโมง", "วันเข้าทำงาน"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        emp_Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        emp_Table.getTableHeader().setReorderingAllowed(false);
        emp_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emp_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(emp_Table);
        if (emp_Table.getColumnModel().getColumnCount() > 0) {
            emp_Table.getColumnModel().getColumn(0).setResizable(false);
            emp_Table.getColumnModel().getColumn(0).setPreferredWidth(50);
            emp_Table.getColumnModel().getColumn(1).setResizable(false);
            emp_Table.getColumnModel().getColumn(1).setPreferredWidth(50);
            emp_Table.getColumnModel().getColumn(2).setResizable(false);
            emp_Table.getColumnModel().getColumn(2).setPreferredWidth(125);
            emp_Table.getColumnModel().getColumn(3).setResizable(false);
            emp_Table.getColumnModel().getColumn(3).setPreferredWidth(100);
            emp_Table.getColumnModel().getColumn(4).setResizable(false);
            emp_Table.getColumnModel().getColumn(4).setPreferredWidth(160);
            emp_Table.getColumnModel().getColumn(5).setResizable(false);
            emp_Table.getColumnModel().getColumn(5).setPreferredWidth(110);
            emp_Table.getColumnModel().getColumn(6).setResizable(false);
            emp_Table.getColumnModel().getColumn(6).setPreferredWidth(120);
            emp_Table.getColumnModel().getColumn(7).setResizable(false);
            emp_Table.getColumnModel().getColumn(7).setPreferredWidth(50);
            emp_Table.getColumnModel().getColumn(8).setResizable(false);
            emp_Table.getColumnModel().getColumn(8).setPreferredWidth(110);
            emp_Table.getColumnModel().getColumn(9).setResizable(false);
            emp_Table.getColumnModel().getColumn(9).setPreferredWidth(95);
            emp_Table.getColumnModel().getColumn(10).setResizable(false);
            emp_Table.getColumnModel().getColumn(10).setPreferredWidth(110);
            emp_Table.getColumnModel().getColumn(11).setResizable(false);
            emp_Table.getColumnModel().getColumn(11).setPreferredWidth(600);
            emp_Table.getColumnModel().getColumn(12).setResizable(false);
            emp_Table.getColumnModel().getColumn(12).setPreferredWidth(100);
            emp_Table.getColumnModel().getColumn(13).setResizable(false);
            emp_Table.getColumnModel().getColumn(13).setPreferredWidth(90);
        }

        jLabel1.setFont(new java.awt.Font("TH SarabunPSK", 1, 48)); // NOI18N
        jLabel1.setText("พนักงาน");

        Btn_checkAll.setBackground(new java.awt.Color(44, 62, 80));
        Btn_checkAll.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        Btn_checkAll.setForeground(new java.awt.Color(255, 255, 255));
        Btn_checkAll.setText("เลือกทั้งหมด");
        Btn_checkAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_checkAllActionPerformed(evt);
            }
        });

        searchEmpFNameTxt.setBackground(new java.awt.Color(218, 223, 225));
        searchEmpFNameTxt.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        searchEmpFNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmpFNameTxtActionPerformed(evt);
            }
        });

        searchEmpLNameTxt.setBackground(new java.awt.Color(236, 240, 241));
        searchEmpLNameTxt.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        searchEmpLNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmpLNameTxtActionPerformed(evt);
            }
        });

        searchEmpName.setBackground(new java.awt.Color(236, 240, 241));
        searchEmpName.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        searchEmpName.setText("ค้นหา");
        searchEmpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmpNameActionPerformed(evt);
            }
        });

        searchSpecialBTN.setBackground(new java.awt.Color(236, 240, 241));
        searchSpecialBTN.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        searchSpecialBTN.setText("ระบุเงื่อนไข");
        searchSpecialBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSpecialBTNActionPerformed(evt);
            }
        });

        ResetEmpName.setBackground(new java.awt.Color(236, 240, 241));
        ResetEmpName.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        ResetEmpName.setText("รีเซ็ต");
        ResetEmpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetEmpNameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel2.setText("ชื่อ");

        jLabel3.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel3.setText("นามสกุล");

        Btn_MainMenu.setBackground(new java.awt.Color(236, 240, 241));
        Btn_MainMenu.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        Btn_MainMenu.setText("เมนูหลัก");
        Btn_MainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_MainMenuActionPerformed(evt);
            }
        });

        Btn_back.setBackground(new java.awt.Color(236, 240, 241));
        Btn_back.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        Btn_back.setText("ย้อนกลับ");
        Btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_backActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(233, 212, 96));

        insertButton.setBackground(new java.awt.Color(236, 240, 241));
        insertButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 25)); // NOI18N
        insertButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Win_10\\Downloads\\add (1).png")); // NOI18N
        insertButton.setText(" เพิ่ม");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        EditButton.setBackground(new java.awt.Color(236, 240, 241));
        EditButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 25)); // NOI18N
        EditButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Win_10\\Downloads\\tools.png")); // NOI18N
        EditButton.setText("แก้ไข");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(236, 240, 241));
        deleteButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 25)); // NOI18N
        deleteButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Win_10\\Downloads\\delete (1).png")); // NOI18N
        deleteButton.setText(" ลบ");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Btn_MainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(Btn_checkAll, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1058, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(557, 557, 557)
                                .addComponent(jLabel1))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(searchEmpFNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3)
                        .addGap(26, 26, 26)
                        .addComponent(searchEmpLNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(searchEmpName)
                        .addGap(18, 18, 18)
                        .addComponent(searchSpecialBTN)
                        .addGap(18, 18, 18)
                        .addComponent(ResetEmpName)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchEmpFNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(searchEmpLNameTxt)
                    .addComponent(searchEmpName)
                    .addComponent(searchSpecialBTN)
                    .addComponent(ResetEmpName))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(101, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(137, 137, 137))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(Btn_checkAll, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(200, 200, 200)
                                .addComponent(Btn_MainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        EmployeeForm ef = new EmployeeForm();
        ef.setupdateFlag(false);
        ef.openFrame();
    }//GEN-LAST:event_insertButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        String s[] = getcheckID().split(",");

        int YesOrNo = JOptionPane.showConfirmDialog(null, "ลบข้อมูลทั้งหมดจำนวน " + s.length + " แถว", "คำเตือนในการลบ", JOptionPane.YES_NO_OPTION);
        if (YesOrNo == JOptionPane.YES_NO_OPTION) {
            String sql = "DELETE from EMPLOYEE " + "WHERE EMP_ID in (" + getcheckID() + ")";

            System.out.println(getcheckID());

            try {
                Connection conn = Gui_db.getConnection();
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.executeUpdate();

            } catch (SQLException ex) {
                System.out.println(ex.getMessage());

            }

            empT.clearRow();
            empT.showDataRecord();
            JOptionPane.showMessageDialog(this, "ลบข้อมูลเรียบร้อยแล้ว ");
        }

        enableButtonCheck();


    }//GEN-LAST:event_deleteButtonActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        EmployeeForm ef = new EmployeeForm();
        ef.setupdateFlag(true);

        //EmployeeForm empF = new EmployeeForm();
        String sql = "select EMP_PERSON_ID,EMP_GENDER,EMP_FNAME,EMP_LNAME,EMP_POSITION,EMP_RANK,EMP_ADDRESS,"
                + "EMP_TELEPHONE,EMP_START_DATE,EMP_CHG_HOUR "
                + "from EMPLOYEE WHERE EMP_ID = " + getcheckID();

        try (Connection conn = Gui_db.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql)) {

            // loop through the result set
            while (rs.next()) {

                ef.openUpdateFrame(getcheckID(), rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6),
                         rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10));
            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } catch (ParseException ex) {
            Logger.getLogger(EmployeeTable.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_EditButtonActionPerformed

    private void Btn_checkAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_checkAllActionPerformed
        if (Btn_checkAll.getText().equals("เลือกทั้งหมด")) {
            for (int i = 0; i < emp_Table.getRowCount(); i++) {
                model.setValueAt(true, i, 0);
            }
            Btn_checkAll.setText("ยกเลิกการเลือก");
        } else {
            for (int i = 0; i < emp_Table.getRowCount(); i++) {
                model.setValueAt(false, i, 0);
            }
            Btn_checkAll.setText("เลือกทั้งหมด");
        }

        enableButtonCheck();
    }//GEN-LAST:event_Btn_checkAllActionPerformed

    private void emp_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emp_TableMouseClicked
        enableButtonCheck();
    }//GEN-LAST:event_emp_TableMouseClicked

    private void searchEmpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmpNameActionPerformed
        showSearchEmployeeName();
    }//GEN-LAST:event_searchEmpNameActionPerformed

    private void searchEmpLNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmpLNameTxtActionPerformed
        showSearchEmployeeName();
    }//GEN-LAST:event_searchEmpLNameTxtActionPerformed

    private void searchSpecialBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSpecialBTNActionPerformed
        EmployeeFromSpecialSearch efss = new EmployeeFromSpecialSearch();
        efss.getDataEmployee("M");
        efss.openFrame();

    }//GEN-LAST:event_searchSpecialBTNActionPerformed

    private void searchEmpFNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmpFNameTxtActionPerformed
        showSearchEmployeeName();
    }//GEN-LAST:event_searchEmpFNameTxtActionPerformed

    private void ResetEmpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetEmpNameActionPerformed
        openFrame();
        getEmpGender = null;
        getEmpPosition = null;
    }//GEN-LAST:event_ResetEmpNameActionPerformed

    private void Btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_backActionPerformed
        new EmployeeMenu().setVisible(true);
        empT.setVisible(false);
    }//GEN-LAST:event_Btn_backActionPerformed

    private void Btn_MainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_MainMenuActionPerformed
        new MainFrame().setVisible(true);
        empT.setVisible(false);
    }//GEN-LAST:event_Btn_MainMenuActionPerformed

    public void showSearchEmployeeName() {
        empT.clearRow();
        empT.searchEmployeeName();
        empT.enableButtonCheck();
        empT.setVisible(true);

    }

    public void searchEmployeeName() {

        String searchEmpFName = searchEmpFNameTxt.getText();
        String searchEmpLName = searchEmpLNameTxt.getText();

        if (getEmpGender == null && getEmpPosition == null) {
            String sql = "select EMP_ID, EMP_QUIT_DATE, EMP_PERSON_ID, EMP_FNAME,EMP_LNAME, EMP_GENDER, EMP_POSITION, EMP_RANK, EMP_TELEPHONE, EMP_ADDRESS, EMP_CHG_HOUR, EMP_START_DATE from EMPLOYEE where "
                    + "EMP_FNAME like '%" + searchEmpFName + "%' and EMP_LNAME like '%" + searchEmpLName + "%' order by -EMP_QUIT_DATE;";

            try (Connection conn = Gui_db.getConnection();
                    Statement stmt = conn.createStatement();
                    ResultSet rs = stmt.executeQuery(sql)) {

                int row = 0;
                while (rs.next()) {
                    model.addRow(data);
                    model.setValueAt(false, row, 0);
                    model.setValueAt(row + 1, row, 1);
                    model.setValueAt(rs.getString(1), row, 2);
                    String empStatus = "";
                    if (rs.getString(2) == null) {
                        empStatus = "ทำงาน";
                    } else {
                        empStatus = "ลาออก";
                    }
                    model.setValueAt(empStatus, row, 3);
                    model.setValueAt(rs.getString(3), row, 4);
                    model.setValueAt(rs.getString(4), row, 5);
                    model.setValueAt(rs.getString(5), row, 6);
                    model.setValueAt(rs.getString(6), row, 7);
                    model.setValueAt(rs.getString(7), row, 8);
                    model.setValueAt(rs.getString(8), row, 9);
                    model.setValueAt(rs.getString(9), row, 10);
                    model.setValueAt(rs.getString(10), row, 11);
                    model.setValueAt(rs.getString(11), row, 12);
                    model.setValueAt(rs.getString(12), row, 13);

                    row++;
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }

        } else if(getEmpGender != null && getEmpPosition != null){
            
            String gender = "";
            String statement = "";
            if (getEmpGender.equals("ชาย")) {
                gender = "M";
            } else if (getEmpGender.equals("หญิง")) {
                gender = "F";
            }
            if(!getEmpPosition.equals("ทุกตำแหน่ง")){
                statement = "and EMP_POSITION = '" + getEmpPosition + "'";
            }
            String sql = "select EMP_ID, EMP_QUIT_DATE, EMP_PERSON_ID, EMP_FNAME,EMP_LNAME, EMP_GENDER, EMP_POSITION, EMP_RANK, EMP_TELEPHONE, EMP_ADDRESS, EMP_CHG_HOUR, EMP_START_DATE from EMPLOYEE where "
                    + "EMP_FNAME like '%" + searchEmpFName + "%' and EMP_LNAME like '%" + searchEmpLName + "%' "
                    + "and EMP_GENDER = '" + gender + "' " + statement + " order by -EMP_QUIT_DATE;";
            System.out.println(sql);
            try (Connection conn = Gui_db.getConnection();
                    Statement stmt = conn.createStatement();
                    ResultSet rs = stmt.executeQuery(sql)) {

                int row = 0;
                while (rs.next()) {
                    model.addRow(data);
                    model.setValueAt(false, row, 0);
                    model.setValueAt(row + 1, row, 1);
                    model.setValueAt(rs.getString(1), row, 2);
                    String empStatus = "";
                    if (rs.getString(2) == null) {
                        empStatus = "ทำงาน";
                    } else {
                        empStatus = "ลาออก";
                    }
                    model.setValueAt(empStatus, row, 3);
                    model.setValueAt(rs.getString(3), row, 4);
                    model.setValueAt(rs.getString(4), row, 5);
                    model.setValueAt(rs.getString(5), row, 6);
                    model.setValueAt(rs.getString(6), row, 7);
                    model.setValueAt(rs.getString(7), row, 8);
                    model.setValueAt(rs.getString(8), row, 9);
                    model.setValueAt(rs.getString(9), row, 10);
                    model.setValueAt(rs.getString(10), row, 11);
                    model.setValueAt(rs.getString(11), row, 12);
                    model.setValueAt(rs.getString(12), row, 13);

                    row++;
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }

        }

    }

    public void showGetSearch(String empGender, String empPosition) {
        getEmpGender = empGender;
        getEmpPosition = empPosition;
        empT.clearRow();
        empT.getSearch(empGender, empPosition);
        empT.enableButtonCheck();
        empT.setVisible(true);
    }

    public void getSearch(String empGender, String empPosition) {

        String gender = "";
        if (empGender.equals("ชาย")) {
            gender = "M";
        } else if (empGender.equals("หญิง")) {
            gender = "F";
        }
        String position = "";
        if (empPosition.equals("ทุกตำแหน่ง")) {
            position = "not in('')";
        } else {
            position = " = '" + empPosition + "'";
        }

        String sql = "select EMP_ID, EMP_QUIT_DATE, EMP_PERSON_ID, EMP_FNAME,EMP_LNAME, EMP_GENDER, EMP_POSITION, EMP_RANK, EMP_TELEPHONE, EMP_ADDRESS, EMP_CHG_HOUR, EMP_START_DATE from EMPLOYEE where "
                + "EMP_GENDER = '" + gender + "' and EMP_POSITION " + position + " order by -EMP_QUIT_DATE;";

        try {
            Connection con = Gui_db.getConnection();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            int row = 0;
            while (rs.next()) {
                model.addRow(data);
                model.setValueAt(false, row, 0);
                model.setValueAt(row + 1, row, 1);
                model.setValueAt(rs.getString(1), row, 2);
                String empStatus = "";
                if (rs.getString(2) == null) {
                    empStatus = "ทำงาน";
                } else {
                    empStatus = "ลาออก";
                }
                model.setValueAt(empStatus, row, 3);
                model.setValueAt(rs.getString(3), row, 4);
                model.setValueAt(rs.getString(4), row, 5);
                model.setValueAt(rs.getString(5), row, 6);
                model.setValueAt(rs.getString(6), row, 7);
                model.setValueAt(rs.getString(7), row, 8);
                model.setValueAt(rs.getString(8), row, 9);
                model.setValueAt(rs.getString(9), row, 10);
                model.setValueAt(rs.getString(10), row, 11);
                model.setValueAt(rs.getString(11), row, 12);
                model.setValueAt(rs.getString(12), row, 13);

                row++;
            }

        } catch (SQLException ex) {
            System.out.println(ex.getMessage());

        }

    } // เพิ่มโดย A  line 345-496  

    public void showDataRecord() {
        String sql = "select EMP_ID, EMP_QUIT_DATE, EMP_PERSON_ID, EMP_FNAME,EMP_LNAME, EMP_GENDER, EMP_POSITION, EMP_RANK, EMP_TELEPHONE, EMP_ADDRESS, EMP_CHG_HOUR, EMP_START_DATE  "
                + "from EMPLOYEE" + " order by -EMP_QUIT_DATE;";

        try (Connection conn = Gui_db.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql)) {

            int row = 0;
            while (rs.next()) {
                model.addRow(data);
                model.setValueAt(false, row, 0);
                model.setValueAt(row + 1, row, 1);
                String empStatus = "";

                model.setValueAt(rs.getString(1), row, 2);
                if (rs.getString(2) == null) {
                    empStatus = "ทำงาน";
                } else {
                    empStatus = "ลาออก";
                }
                model.setValueAt(empStatus, row, 3);
                model.setValueAt(rs.getString(3), row, 4);
                model.setValueAt(rs.getString(4), row, 5);
                model.setValueAt(rs.getString(5), row, 6);
                model.setValueAt(rs.getString(6), row, 7);
                model.setValueAt(rs.getString(7), row, 8);
                model.setValueAt(rs.getString(8), row, 9);
                model.setValueAt(rs.getString(9), row, 10);
                model.setValueAt(rs.getString(10), row, 11);
                model.setValueAt(rs.getString(11), row, 12);
                model.setValueAt(rs.getString(12), row, 13);

                row++;
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }

    }

    public void clearRow() {
        int row = model.getRowCount() - 1;
        while (row > -1) {
            model.removeRow(row);
            row--;
        }
    }

    public void enableButtonCheck() {
        String check = getcheckID();
        String[] s = check.split(",");
        if (emp_Table.getRowCount() > 0) {
            Btn_checkAll.setEnabled(true);
        } else {
            Btn_checkAll.setEnabled(false);
        }

        if (check.equals("")) {
            EditButton.setEnabled(false);
            deleteButton.setEnabled(false);
            Btn_checkAll.setText("เลือกทั้งหมด");
        } else if (s.length == 1) {
            EditButton.setEnabled(true);
            deleteButton.setEnabled(true);
            Btn_checkAll.setText("ยกเลิกการเลือก");
        } else {
            deleteButton.setEnabled(true);
            EditButton.setEnabled(false);
        }

    }

    /**
     * @param args the command line arguments
     */
    public void openFrame() {
        empT.clearRow();
        empT.showDataRecord();
        empT.setVisible(true);
        empT.enableButtonCheck();

    }

    public void setTabel() {
        // BtnInsert.setEnabled(true);

        model = (DefaultTableModel) emp_Table.getModel();

        TableColumnModel cmodel = emp_Table.getColumnModel();
        for (int i = 1; i < 14; i++) {
            cmodel.getColumn(i).setCellRenderer(textAreaRenderer);
            cmodel.getColumn(i).setCellEditor(textAreaEditor);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                empT.openFrame();
            }
        });
    }

    public String getcheckID() {
        String id = "";
        for (int i = 0; i < emp_Table.getRowCount(); i++) {
            if (Boolean.valueOf(emp_Table.getValueAt(i, 0).toString())) {
                id += emp_Table.getValueAt(i, 2).toString() + ",";
            }
        }
        if (id.equals("")) {
            return "";
        }

        return id.substring(0, id.length() - 1);
    }

    public void callClearRow() {
        empT.clearRow();
    }

    public void callEnableButtonCheck() {
        empT.enableButtonCheck();
    }

    public void callShowDataRecord() {
        empT.showDataRecord();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_MainMenu;
    private javax.swing.JButton Btn_back;
    private javax.swing.JButton Btn_checkAll;
    private javax.swing.JButton EditButton;
    private javax.swing.JButton ResetEmpName;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTable emp_Table;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchEmpFNameTxt;
    private javax.swing.JTextField searchEmpLNameTxt;
    private javax.swing.JButton searchEmpName;
    private javax.swing.JButton searchSpecialBTN;
    // End of variables declaration//GEN-END:variables
}
