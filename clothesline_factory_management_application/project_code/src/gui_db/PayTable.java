/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui_db;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class PayTable extends javax.swing.JFrame {
              private static  PayTable PT = new PayTable();
              private DefaultTableModel model = new DefaultTableModel();
              private Object[] data = new Object[0];
              private static String date = "";
              private static String timein = "";
              private static String timeout = "";
              private static String empName = "";
              private static String getEmpDateStart = null;
              private static String getEmpDateFinish = null;
    /**
     * Creates new form TimeEmpTable
     */
    public PayTable() {
        initComponents();
        model = (DefaultTableModel)pay_table.getModel(); 
        showDataRecord();
    }
    public void enableButtonCheck() {
        String check = getcheckID();
        String[] s = check.split(",");
        if(pay_table.getRowCount() > 0)
            checkAllButton.setEnabled(true);
        else
            checkAllButton.setEnabled(false);
        
        if (check.equals("")) {
            EditButton.setEnabled(false);
            DeleteButton.setEnabled(false);
            checkAllButton.setText("เลือกทั้งหมด");
        }
        
        else if (s.length == 1) {
            EditButton.setEnabled(true);
            DeleteButton.setEnabled(true);
            checkAllButton.setText("ยกเลิกการเลือก");
        }
        
        else {
            DeleteButton.setEnabled(true);
            EditButton.setEnabled(false);
        }
         
        
    }
    public String getcheckID()
   {
       String id="";
       for(int i=0;i<pay_table.getRowCount();i++)
       {
           if(Boolean.valueOf(pay_table.getValueAt(i, 0).toString()))
           {
               id += pay_table.getValueAt(i, 2).toString() +",";
               empName = pay_table.getValueAt(i, 3).toString();
               date = pay_table.getValueAt(i, 4).toString();
              
               
               
               
           }
       }
       if(id.equals(""))
           return "";
       
       return id.substring(0, id.length()-1);
   }
    
    public void clearRow() {
        int row = model.getRowCount()-1;
        while(row > -1) {
            model.removeRow(row);
            row--;
        }
    }
     public void showDataRecord() {
              String sql = "select EMP_ID,EMP_FNAME,EMP_LNAME,PAY_DATE,PAY_MONTH_COST,PAY_OT_COST"
                      + " from PAY_SALARY natural join employee" + " order by  PAY_DATE desc ";
              
              try (Connection conn = Gui_db.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(sql)) {
                  
              int row=0;
              while (rs.next()) {
                model.addRow(data);
                model.setValueAt(false, row, 0);
                model.setValueAt(row+1, row, 1);
                model.setValueAt(rs.getString(1), row, 2);
                model.setValueAt(rs.getString(2) + " " + rs.getString(3), row, 3);
                model.setValueAt(rs.getString(4), row, 4);
                model.setValueAt(rs.getString(5), row, 5);
                model.setValueAt(rs.getString(6), row, 6);
                
             
                row++;
              }
              }catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                }
             
              
     }
    public void callEnableButtonCheck()
    {
        PT.enableButtonCheck();
    }
    public void callClearRow() {
        PT.clearRow();
    }
    
    public void callShowDataRecord() {
        PT.showDataRecord();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        checkAllButton = new javax.swing.JButton();
        Btn_MainMenu = new javax.swing.JButton();
        Btn_back = new javax.swing.JButton();
        searchEmpFNameTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pay_table = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        searchEmpLNameTxt = new javax.swing.JTextField();
        searchEmpName = new javax.swing.JButton();
        searchSpecialBTN = new javax.swing.JButton();
        ResetEmpName = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        InsertButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(226, 106, 106));

        jLabel1.setFont(new java.awt.Font("TH SarabunPSK", 1, 36)); // NOI18N
        jLabel1.setText("ตารางจ่ายเงินพนักงาน");

        checkAllButton.setBackground(new java.awt.Color(44, 62, 80));
        checkAllButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        checkAllButton.setForeground(new java.awt.Color(255, 255, 255));
        checkAllButton.setText("เลือกทั้งหมด");
        checkAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAllButtonActionPerformed(evt);
            }
        });

        Btn_MainMenu.setBackground(new java.awt.Color(236, 240, 241));
        Btn_MainMenu.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        Btn_MainMenu.setText("เมนูหลัก");
        Btn_MainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_MainMenuActionPerformed(evt);
            }
        });

        Btn_back.setBackground(new java.awt.Color(236, 240, 241));
        Btn_back.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        Btn_back.setText("ย้อนกลับ");
        Btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_backActionPerformed(evt);
            }
        });

        searchEmpFNameTxt.setBackground(new java.awt.Color(236, 240, 241));
        searchEmpFNameTxt.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        searchEmpFNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmpFNameTxtActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel2.setText("ชื่อ");

        pay_table.setBackground(new java.awt.Color(218, 223, 225));
        pay_table.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        pay_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "เลือก", "ลำดับ", "หมายเลขพนักงาน", "พนักงาน", "วันที่", "จำนวนเงินเดือน", "จำนวนเงิน OT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pay_table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        pay_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pay_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(pay_table);
        if (pay_table.getColumnModel().getColumnCount() > 0) {
            pay_table.getColumnModel().getColumn(0).setResizable(false);
            pay_table.getColumnModel().getColumn(0).setPreferredWidth(55);
            pay_table.getColumnModel().getColumn(1).setResizable(false);
            pay_table.getColumnModel().getColumn(1).setPreferredWidth(55);
            pay_table.getColumnModel().getColumn(2).setResizable(false);
            pay_table.getColumnModel().getColumn(2).setPreferredWidth(115);
            pay_table.getColumnModel().getColumn(3).setResizable(false);
            pay_table.getColumnModel().getColumn(3).setPreferredWidth(215);
            pay_table.getColumnModel().getColumn(4).setResizable(false);
            pay_table.getColumnModel().getColumn(4).setPreferredWidth(120);
            pay_table.getColumnModel().getColumn(5).setResizable(false);
            pay_table.getColumnModel().getColumn(5).setPreferredWidth(105);
            pay_table.getColumnModel().getColumn(6).setResizable(false);
            pay_table.getColumnModel().getColumn(6).setPreferredWidth(105);
        }

        jLabel3.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        jLabel3.setText("นามสกุล");

        searchEmpLNameTxt.setBackground(new java.awt.Color(236, 240, 241));
        searchEmpLNameTxt.setFont(new java.awt.Font("TH SarabunPSK", 1, 22)); // NOI18N
        searchEmpLNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmpLNameTxtActionPerformed(evt);
            }
        });

        searchEmpName.setBackground(new java.awt.Color(236, 240, 241));
        searchEmpName.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        searchEmpName.setText("ค้นหา");
        searchEmpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmpNameActionPerformed(evt);
            }
        });

        searchSpecialBTN.setBackground(new java.awt.Color(236, 240, 241));
        searchSpecialBTN.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        searchSpecialBTN.setText("ระบุเงื่อนไข");
        searchSpecialBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSpecialBTNActionPerformed(evt);
            }
        });

        ResetEmpName.setBackground(new java.awt.Color(236, 240, 241));
        ResetEmpName.setFont(new java.awt.Font("TH SarabunPSK", 1, 20)); // NOI18N
        ResetEmpName.setText("รีเซ็ต");
        ResetEmpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetEmpNameActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(226, 106, 106));

        InsertButton.setBackground(new java.awt.Color(236, 240, 241));
        InsertButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        InsertButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_db/add (1).png"))); // NOI18N
        InsertButton.setText(" เพิ่ม");
        InsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertButtonActionPerformed(evt);
            }
        });

        EditButton.setBackground(new java.awt.Color(236, 240, 241));
        EditButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        EditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_db/tools.png"))); // NOI18N
        EditButton.setText("แก้ไข");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        DeleteButton.setBackground(new java.awt.Color(236, 240, 241));
        DeleteButton.setFont(new java.awt.Font("TH SarabunPSK", 1, 24)); // NOI18N
        DeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gui_db/delete (1).png"))); // NOI18N
        DeleteButton.setText(" ลบ");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(EditButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(InsertButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InsertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(373, 373, 373)
                        .addComponent(jLabel1))
                    .addComponent(Btn_MainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(checkAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(jLabel2))
                                    .addComponent(searchEmpFNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(searchEmpLNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(43, 43, 43)
                                        .addComponent(searchEmpName)
                                        .addGap(18, 18, 18)
                                        .addComponent(searchSpecialBTN)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ResetEmpName))
                                    .addComponent(jLabel3)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel1)))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchEmpFNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchEmpLNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResetEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchSpecialBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(96, 96, 96))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(checkAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(231, 231, 231)))
                        .addComponent(Btn_MainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(66, 66, 66))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void InsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertButtonActionPerformed
        PayForm pt = new PayForm();
        
        pt.openinserFrame();
        
        
        
    }//GEN-LAST:event_InsertButtonActionPerformed

   
    public void openFrame() {
        PT.clearRow();
        PT.showDataRecord();
        PT.enableButtonCheck();
        PT.setVisible(true);
     }
    private void checkAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAllButtonActionPerformed
         if(checkAllButton.getText().equals("เลือกทั้งหมด")) {
            for(int i=0; i<pay_table.getRowCount(); i++)
                model.setValueAt(true, i, 0);
            checkAllButton.setText("ยกเลิกการเลือก");
        } else {
            for(int i=0; i<pay_table.getRowCount(); i++)
                model.setValueAt(false, i, 0);
            checkAllButton.setText("เลือกทั้งหมด");
        }
         PT.enableButtonCheck();
    }//GEN-LAST:event_checkAllButtonActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        String id = getcheckID();
        PayForm pt = new PayForm();
        DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        DateFormat formatter = new SimpleDateFormat("HH:mm:ss");
     
        
        try {
            
            
            Date reportDate = format.parse(date);
            pt.setupdateFlag(true);
            pt.setUpdateForm(id,reportDate,empName);
        } catch (ParseException ex) {
            Logger.getLogger(PayTable.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         
          
         
    }//GEN-LAST:event_EditButtonActionPerformed

    private void pay_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pay_tableMouseClicked
        enableButtonCheck();
    }//GEN-LAST:event_pay_tableMouseClicked

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        String num[] = getcheckID().split(",");;
        String s[] = new String[3];
        Array(s);
        
        int YesOrNo = JOptionPane.showConfirmDialog(null,"ลบข้อมูลทั้งหมดจำนวน " + num.length + " แถว","คำเตือนในการลบ", JOptionPane.YES_NO_OPTION);
                if(YesOrNo == JOptionPane.YES_NO_OPTION){
                    String sql = "DELETE from PAY_SALARY "+"WHERE EMP_ID in (" + s[0] +")" +" AND "
                                +"PAY_DATE in (" + s[1] +")";
                    System.out.println(sql);
                try  {
                Connection conn = Gui_db.getConnection();
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.executeUpdate();
                
                }
               
               catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                        
                }
               PT.clearRow();
               PT.showDataRecord();
               enableButtonCheck();
               JOptionPane.showMessageDialog(this, "ลบข้อมูลเรียบร้อยแล้ว "); 
              }
                
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void searchEmpFNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmpFNameTxtActionPerformed
        showSearchEmpNameTimeWork();
    }//GEN-LAST:event_searchEmpFNameTxtActionPerformed

    private void searchEmpLNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmpLNameTxtActionPerformed
        showSearchEmpNameTimeWork();
    }//GEN-LAST:event_searchEmpLNameTxtActionPerformed

    private void searchEmpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmpNameActionPerformed
        showSearchEmpNameTimeWork();
    }//GEN-LAST:event_searchEmpNameActionPerformed

    private void searchSpecialBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSpecialBTNActionPerformed

        PayEmpFromSpecialSearch PFSS = new PayEmpFromSpecialSearch();
        PFSS.openFrame();

    }//GEN-LAST:event_searchSpecialBTNActionPerformed

   
    
    private void ResetEmpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetEmpNameActionPerformed
        openFrame();
        searchEmpFNameTxt.setText("");
        searchEmpLNameTxt.setText("");
        getEmpDateStart = null;
        getEmpDateFinish = null;
    }//GEN-LAST:event_ResetEmpNameActionPerformed

    private void Btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_backActionPerformed
        new EmployeeMenu().setVisible(true);
        PT.setVisible(false);
    }//GEN-LAST:event_Btn_backActionPerformed

    private void Btn_MainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_MainMenuActionPerformed
        new MainFrame().setVisible(true);
        PT.setVisible(false);
    }//GEN-LAST:event_Btn_MainMenuActionPerformed

    
     public void showSearchEmpNameTimeWork(){
        PT.clearRow();
        PT.searchEmpNameTimeWork();
        PT.enableButtonCheck();
        PT.setVisible(true);




    }
    
    
    public void searchEmpNameTimeWork(){
      
        
        
        if(getEmpDateStart == null && getEmpDateFinish == null){
            String searchEmpFName = searchEmpFNameTxt.getText();
            String searchEmpLName = searchEmpLNameTxt.getText();
        
            String sql = "select EMP_ID,EMP_FNAME,EMP_LNAME,PAY_DATE,PAY_MONTH_COST,PAY_OT_COST"
                          + " from PAY_SALARY natural join employee where EMP_FNAME like'%" +  searchEmpFName  + "%' and EMP_LNAME like'%" + searchEmpLName  + "%' order by PAY_DATE desc";

            try{
                Connection con = Gui_db.getConnection();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);

                int row = 0;
                while(rs.next()){
                    model.addRow(data);
                    model.setValueAt(false, row, 0);
                    model.setValueAt(row+1, row, 1);
                    model.setValueAt(rs.getString(1), row, 2);
                    model.setValueAt(rs.getString(2) + " " + rs.getString(3), row, 3);
                    model.setValueAt(rs.getString(4), row, 4);
                    model.setValueAt(rs.getString(5), row, 5);
                    model.setValueAt(rs.getString(6), row, 6);


                    row++;

                }



            }catch(SQLException ex){
                System.out.println(ex.getMessage());

            }
        }else{
            
            String searchEmpFName = searchEmpFNameTxt.getText();
            String searchEmpLName = searchEmpLNameTxt.getText();

            String sql = "select EMP_ID,EMP_FNAME,EMP_LNAME,PAY_DATE,PAY_MONTH_COST,PAY_OT_COST"
                          + " from PAY_SALARY natural join employee where EMP_FNAME like'%" +  searchEmpFName  + "%' and EMP_LNAME like'%" + searchEmpLName  + "%' " +  
                          "and PAY_DATE >= '" + getEmpDateStart  + "' and PAY_DATE <= '" +  getEmpDateFinish  + "' order by  PAY_DATE desc";
            System.out.println(sql);
            try{
                Connection con = Gui_db.getConnection();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);

                int row = 0;
                while(rs.next()){
                    model.addRow(data);
                    model.setValueAt(false, row, 0);
                    model.setValueAt(row+1, row, 1);
                    model.setValueAt(rs.getString(1), row, 2);
                    model.setValueAt(rs.getString(2) + " " + rs.getString(3), row, 3);
                    model.setValueAt(rs.getString(4), row, 4);
                    model.setValueAt(rs.getString(5), row, 5);
                    model.setValueAt(rs.getString(6), row, 6);


                    row++;

                }



            }catch(SQLException ex){
                System.out.println(ex.getMessage());

            }
            
            
            
        }
       
        
        
        
        
        
        
        
    }
    
   
    public void showDataSpecialSearch(String EmpDateStart, String EmpDateFinish){
        getEmpDateStart = EmpDateStart;
        getEmpDateFinish = EmpDateFinish;
     
        PT.clearRow();
        PT.getDataSpecialSearch(EmpDateStart, EmpDateFinish);
        PT.enableButtonCheck();  
        PT.setVisible(true);
    }
    
    public void getDataSpecialSearch(String EmpDateStart, String EmpDateFinish){
       
        searchEmpFNameTxt.setText("");
        searchEmpLNameTxt.setText("");
        String sql = "SELECT EMP_ID,EMP_FNAME,EMP_LNAME,PAY_DATE,PAY_MONTH_COST,PAY_OT_COST " +
                     "FROM PAY_SALARY NATURAL JOIN EMPLOYEE WHERE PAY_DATE >= '" +  EmpDateStart + "' and PAY_DATE <= '" +  EmpDateFinish +"' order by  PAY_DATE desc;";
        System.out.println(sql);
        try{
            Connection con = Gui_db.getConnection();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            int row = 0;
            while(rs.next()){
                model.addRow(data);
                model.setValueAt(false, row, 0);
                model.setValueAt(row+1, row, 1);
                model.setValueAt(rs.getString(1), row, 2);
                model.setValueAt(rs.getString(2) + " " + rs.getString(3), row, 3);
                model.setValueAt(rs.getString(4), row, 4);
                model.setValueAt(rs.getString(5), row, 5);
                model.setValueAt(rs.getString(6), row, 6);
                
             
                row++;
                
            }
            
            
            
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
            
        }

        
    }
    
    
    
    
    
    
    
    public void Array(String[] a) {
        a[0] = "";
        a[1] = "";
        a[2] = "";
        
       for(int i=0;i<pay_table.getRowCount();i++)
       {
           if(Boolean.valueOf(pay_table.getValueAt(i, 0).toString()))
           {
               a[0] += pay_table.getValueAt(i, 2).toString() +",";
               empName = pay_table.getValueAt(i, 3).toString();
                a[1] += "'"+pay_table.getValueAt(i, 4).toString()+"',";
                a[2] += "'"+pay_table.getValueAt(i, 5).toString()+"',";    
           }
       }
        a[0]=a[0].substring(0, a[0].length()-1);
        a[1]=a[1].substring(0, a[1].length()-1);
        a[2]=a[2].substring(0, a[2].length()-1);

                      
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_MainMenu;
    private javax.swing.JButton Btn_back;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JButton InsertButton;
    private javax.swing.JButton ResetEmpName;
    private javax.swing.JButton checkAllButton;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable pay_table;
    private javax.swing.JTextField searchEmpFNameTxt;
    private javax.swing.JTextField searchEmpLNameTxt;
    private javax.swing.JButton searchEmpName;
    private javax.swing.JButton searchSpecialBTN;
    // End of variables declaration//GEN-END:variables
}
